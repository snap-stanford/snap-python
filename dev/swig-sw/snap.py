# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.9
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _snap.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_snap', [dirname(__file__)])
        except ImportError:
            import _snap
            return _snap
        if fp is not None:
            try:
                _mod = imp.load_module('_snap', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _snap = swig_import_helper()
    del swig_import_helper
else:
    import _snap
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


lUndef = _snap.lUndef
lUs = _snap.lUs
lSi = _snap.lSi

def WrNotify(*args):
  return _snap.WrNotify(*args)
WrNotify = _snap.WrNotify

def SaveToErrLog(*args):
  return _snap.SaveToErrLog(*args)
SaveToErrLog = _snap.SaveToErrLog

def InfoNotify(*args):
  return _snap.InfoNotify(*args)
InfoNotify = _snap.InfoNotify

def WarnNotify(*args):
  return _snap.WarnNotify(*args)
WarnNotify = _snap.WarnNotify

def ErrNotify(*args):
  return _snap.ErrNotify(*args)
ErrNotify = _snap.ErrNotify

def StatNotify(*args):
  return _snap.StatNotify(*args)
StatNotify = _snap.StatNotify

def ExeStop(*args):
  return _snap.ExeStop(*args)
ExeStop = _snap.ExeStop
loUndef = _snap.loUndef
loNot = _snap.loNot
loAnd = _snap.loAnd
loOr = _snap.loOr
roUndef = _snap.roUndef
roLs = _snap.roLs
roLEq = _snap.roLEq
roEq = _snap.roEq
roNEq = _snap.roNEq
roGEq = _snap.roGEq
roGt = _snap.roGt
class TCRef(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        _snap.TCRef_swiginit(self,_snap.new_TCRef())
    __swig_destroy__ = _snap.delete_TCRef
TCRef.MkRef = new_instancemethod(_snap.TCRef_MkRef,None,TCRef)
TCRef.UnRef = new_instancemethod(_snap.TCRef_UnRef,None,TCRef)
TCRef.NoRef = new_instancemethod(_snap.TCRef_NoRef,None,TCRef)
TCRef.GetRefs = new_instancemethod(_snap.TCRef_GetRefs,None,TCRef)
TCRef_swigregister = _snap.TCRef_swigregister
TCRef_swigregister(TCRef)

class TSStr(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TSStr_swiginit(self,_snap.new_TSStr(*args))
    __swig_destroy__ = _snap.delete_TSStr
TSStr.CStr = new_instancemethod(_snap.TSStr_CStr,None,TSStr)
TSStr.Empty = new_instancemethod(_snap.TSStr_Empty,None,TSStr)
TSStr.Len = new_instancemethod(_snap.TSStr_Len,None,TSStr)
TSStr_swigregister = _snap.TSStr_swigregister
TSStr_swigregister(TSStr)

class TConv_Pt64Ints32(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TConv_Pt64Ints32_swiginit(self,_snap.new_TConv_Pt64Ints32(*args))
    __swig_destroy__ = _snap.delete_TConv_Pt64Ints32
TConv_Pt64Ints32.PutPt = new_instancemethod(_snap.TConv_Pt64Ints32_PutPt,None,TConv_Pt64Ints32)
TConv_Pt64Ints32.GetPt = new_instancemethod(_snap.TConv_Pt64Ints32_GetPt,None,TConv_Pt64Ints32)
TConv_Pt64Ints32.PutUInt64 = new_instancemethod(_snap.TConv_Pt64Ints32_PutUInt64,None,TConv_Pt64Ints32)
TConv_Pt64Ints32.GetUInt64 = new_instancemethod(_snap.TConv_Pt64Ints32_GetUInt64,None,TConv_Pt64Ints32)
TConv_Pt64Ints32.PutMsUInt32 = new_instancemethod(_snap.TConv_Pt64Ints32_PutMsUInt32,None,TConv_Pt64Ints32)
TConv_Pt64Ints32.GetMsUInt32 = new_instancemethod(_snap.TConv_Pt64Ints32_GetMsUInt32,None,TConv_Pt64Ints32)
TConv_Pt64Ints32.PutLsUInt32 = new_instancemethod(_snap.TConv_Pt64Ints32_PutLsUInt32,None,TConv_Pt64Ints32)
TConv_Pt64Ints32.GetLsUInt32 = new_instancemethod(_snap.TConv_Pt64Ints32_GetLsUInt32,None,TConv_Pt64Ints32)
TConv_Pt64Ints32_swigregister = _snap.TConv_Pt64Ints32_swigregister
TConv_Pt64Ints32_swigregister(TConv_Pt64Ints32)

class TPairHashImpl1(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetHashCd = staticmethod(_snap.TPairHashImpl1_GetHashCd)
    def __init__(self): 
        _snap.TPairHashImpl1_swiginit(self,_snap.new_TPairHashImpl1())
    __swig_destroy__ = _snap.delete_TPairHashImpl1
TPairHashImpl1_swigregister = _snap.TPairHashImpl1_swigregister
TPairHashImpl1_swigregister(TPairHashImpl1)

def TPairHashImpl1_GetHashCd(*args):
  return _snap.TPairHashImpl1_GetHashCd(*args)
TPairHashImpl1_GetHashCd = _snap.TPairHashImpl1_GetHashCd

class TPairHashImpl2(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetHashCd = staticmethod(_snap.TPairHashImpl2_GetHashCd)
    def __init__(self): 
        _snap.TPairHashImpl2_swiginit(self,_snap.new_TPairHashImpl2())
    __swig_destroy__ = _snap.delete_TPairHashImpl2
TPairHashImpl2_swigregister = _snap.TPairHashImpl2_swigregister
TPairHashImpl2_swigregister(TPairHashImpl2)

def TPairHashImpl2_GetHashCd(*args):
  return _snap.TPairHashImpl2_GetHashCd(*args)
TPairHashImpl2_GetHashCd = _snap.TPairHashImpl2_GetHashCd

class TRnd(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TRnd_swiginit(self,_snap.new_TRnd(*args))
    GetUniDevStep = staticmethod(_snap.TRnd_GetUniDevStep)
    GetNrmDevStep = staticmethod(_snap.TRnd_GetNrmDevStep)
    GetExpDevStep = staticmethod(_snap.TRnd_GetExpDevStep)
    LoadTxt = staticmethod(_snap.TRnd_LoadTxt)
    __swig_destroy__ = _snap.delete_TRnd
TRnd.Save = new_instancemethod(_snap.TRnd_Save,None,TRnd)
TRnd.LoadXml = new_instancemethod(_snap.TRnd_LoadXml,None,TRnd)
TRnd.SaveXml = new_instancemethod(_snap.TRnd_SaveXml,None,TRnd)
TRnd.__eq__ = new_instancemethod(_snap.TRnd___eq__,None,TRnd)
TRnd.GetUniDev = new_instancemethod(_snap.TRnd_GetUniDev,None,TRnd)
TRnd.GetUniDevInt = new_instancemethod(_snap.TRnd_GetUniDevInt,None,TRnd)
TRnd.GetUniDevUInt = new_instancemethod(_snap.TRnd_GetUniDevUInt,None,TRnd)
TRnd.GetUniDevInt64 = new_instancemethod(_snap.TRnd_GetUniDevInt64,None,TRnd)
TRnd.GetUniDevUInt64 = new_instancemethod(_snap.TRnd_GetUniDevUInt64,None,TRnd)
TRnd.GetNrmDev = new_instancemethod(_snap.TRnd_GetNrmDev,None,TRnd)
TRnd.GetExpDev = new_instancemethod(_snap.TRnd_GetExpDev,None,TRnd)
TRnd.GetGammaDev = new_instancemethod(_snap.TRnd_GetGammaDev,None,TRnd)
TRnd.GetPoissonDev = new_instancemethod(_snap.TRnd_GetPoissonDev,None,TRnd)
TRnd.GetBinomialDev = new_instancemethod(_snap.TRnd_GetBinomialDev,None,TRnd)
TRnd.GetGeoDev = new_instancemethod(_snap.TRnd_GetGeoDev,None,TRnd)
TRnd.GetPowerDev = new_instancemethod(_snap.TRnd_GetPowerDev,None,TRnd)
TRnd.GetRayleigh = new_instancemethod(_snap.TRnd_GetRayleigh,None,TRnd)
TRnd.GetWeibull = new_instancemethod(_snap.TRnd_GetWeibull,None,TRnd)
TRnd.PutSeed = new_instancemethod(_snap.TRnd_PutSeed,None,TRnd)
TRnd.GetSeed = new_instancemethod(_snap.TRnd_GetSeed,None,TRnd)
TRnd.Randomize = new_instancemethod(_snap.TRnd_Randomize,None,TRnd)
TRnd.Move = new_instancemethod(_snap.TRnd_Move,None,TRnd)
TRnd.Check = new_instancemethod(_snap.TRnd_Check,None,TRnd)
TRnd.SaveTxt = new_instancemethod(_snap.TRnd_SaveTxt,None,TRnd)
TRnd_swigregister = _snap.TRnd_swigregister
TRnd_swigregister(TRnd)
cvar = _snap.cvar
TRnd.RndSeed = _snap.cvar.TRnd_RndSeed

def TRnd_GetUniDevStep(*args):
  return _snap.TRnd_GetUniDevStep(*args)
TRnd_GetUniDevStep = _snap.TRnd_GetUniDevStep

def TRnd_GetNrmDevStep(*args):
  return _snap.TRnd_GetNrmDevStep(*args)
TRnd_GetNrmDevStep = _snap.TRnd_GetNrmDevStep

def TRnd_GetExpDevStep(*args):
  return _snap.TRnd_GetExpDevStep(*args)
TRnd_GetExpDevStep = _snap.TRnd_GetExpDevStep

def TRnd_LoadTxt(*args):
  return _snap.TRnd_LoadTxt(*args)
TRnd_LoadTxt = _snap.TRnd_LoadTxt

class TMem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    New = staticmethod(_snap.TMem_New)
    __swig_destroy__ = _snap.delete_TMem
    def __init__(self, *args): 
        _snap.TMem_swiginit(self,_snap.new_TMem(*args))
    LoadMem = staticmethod(_snap.TMem_LoadMem)
TMem.Save = new_instancemethod(_snap.TMem_Save,None,TMem)
TMem.SaveXml = new_instancemethod(_snap.TMem_SaveXml,None,TMem)
TMem.__call__ = new_instancemethod(_snap.TMem___call__,None,TMem)
TMem.__iadd__ = new_instancemethod(_snap.TMem___iadd__,None,TMem)
TMem.GetMemUsed = new_instancemethod(_snap.TMem_GetMemUsed,None,TMem)
TMem.Gen = new_instancemethod(_snap.TMem_Gen,None,TMem)
TMem.GenZeros = new_instancemethod(_snap.TMem_GenZeros,None,TMem)
TMem.Reserve = new_instancemethod(_snap.TMem_Reserve,None,TMem)
TMem.Del = new_instancemethod(_snap.TMem_Del,None,TMem)
TMem.Clr = new_instancemethod(_snap.TMem_Clr,None,TMem)
TMem.Len = new_instancemethod(_snap.TMem_Len,None,TMem)
TMem.Empty = new_instancemethod(_snap.TMem_Empty,None,TMem)
TMem.Trunc = new_instancemethod(_snap.TMem_Trunc,None,TMem)
TMem.Push = new_instancemethod(_snap.TMem_Push,None,TMem)
TMem.Pop = new_instancemethod(_snap.TMem_Pop,None,TMem)
TMem.DoFitStr = new_instancemethod(_snap.TMem_DoFitStr,None,TMem)
TMem.AddBf = new_instancemethod(_snap.TMem_AddBf,None,TMem)
TMem.GetBf = new_instancemethod(_snap.TMem_GetBf,None,TMem)
TMem.GetAsStr = new_instancemethod(_snap.TMem_GetAsStr,None,TMem)
TMem.GetSIn = new_instancemethod(_snap.TMem_GetSIn,None,TMem)
TMem.SaveMem = new_instancemethod(_snap.TMem_SaveMem,None,TMem)
TMem_swigregister = _snap.TMem_swigregister
TMem_swigregister(TMem)

def TMem_New(*args):
  return _snap.TMem_New(*args)
TMem_New = _snap.TMem_New

def TMem_LoadMem(*args):
  return _snap.TMem_LoadMem(*args)
TMem_LoadMem = _snap.TMem_LoadMem

class TMemIn(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TMemIn_swiginit(self,_snap.new_TMemIn(*args))
    New = staticmethod(_snap.TMemIn_New)
    __swig_destroy__ = _snap.delete_TMemIn
TMemIn.Eof = new_instancemethod(_snap.TMemIn_Eof,None,TMemIn)
TMemIn.Len = new_instancemethod(_snap.TMemIn_Len,None,TMemIn)
TMemIn.GetCh = new_instancemethod(_snap.TMemIn_GetCh,None,TMemIn)
TMemIn.PeekCh = new_instancemethod(_snap.TMemIn_PeekCh,None,TMemIn)
TMemIn.GetBf = new_instancemethod(_snap.TMemIn_GetBf,None,TMemIn)
TMemIn.Reset = new_instancemethod(_snap.TMemIn_Reset,None,TMemIn)
TMemIn.GetNextLnBf = new_instancemethod(_snap.TMemIn_GetNextLnBf,None,TMemIn)
TMemIn_swigregister = _snap.TMemIn_swigregister
TMemIn_swigregister(TMemIn)

def TMemIn_New(*args):
  return _snap.TMemIn_New(*args)
TMemIn_New = _snap.TMemIn_New

class TMemOut(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TMemOut_swiginit(self,_snap.new_TMemOut(*args))
    New = staticmethod(_snap.TMemOut_New)
    __swig_destroy__ = _snap.delete_TMemOut
TMemOut.PutCh = new_instancemethod(_snap.TMemOut_PutCh,None,TMemOut)
TMemOut.PutBf = new_instancemethod(_snap.TMemOut_PutBf,None,TMemOut)
TMemOut.Flush = new_instancemethod(_snap.TMemOut_Flush,None,TMemOut)
TMemOut_swigregister = _snap.TMemOut_swigregister
TMemOut_swigregister(TMemOut)

def TMemOut_New(*args):
  return _snap.TMemOut_New(*args)
TMemOut_New = _snap.TMemOut_New

class TChA(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _snap.delete_TChA
    def __init__(self, *args): 
        _snap.TChA_swiginit(self,_snap.new_TChA(*args))
    LoadTxt = staticmethod(_snap.TChA_LoadTxt)
TChA.Load = new_instancemethod(_snap.TChA_Load,None,TChA)
TChA.Save = new_instancemethod(_snap.TChA_Save,None,TChA)
TChA.SaveXml = new_instancemethod(_snap.TChA_SaveXml,None,TChA)
TChA.__eq__ = new_instancemethod(_snap.TChA___eq__,None,TChA)
TChA.__ne__ = new_instancemethod(_snap.TChA___ne__,None,TChA)
TChA.__lt__ = new_instancemethod(_snap.TChA___lt__,None,TChA)
TChA.__iadd__ = new_instancemethod(_snap.TChA___iadd__,None,TChA)
TChA.GetMemUsed = new_instancemethod(_snap.TChA_GetMemUsed,None,TChA)
TChA.__call__ = new_instancemethod(_snap.TChA___call__,None,TChA)
TChA.CStr = new_instancemethod(_snap.TChA_CStr,None,TChA)
TChA.Clr = new_instancemethod(_snap.TChA_Clr,None,TChA)
TChA.Len = new_instancemethod(_snap.TChA_Len,None,TChA)
TChA.Empty = new_instancemethod(_snap.TChA_Empty,None,TChA)
TChA.Ins = new_instancemethod(_snap.TChA_Ins,None,TChA)
TChA.Del = new_instancemethod(_snap.TChA_Del,None,TChA)
TChA.DelLastCh = new_instancemethod(_snap.TChA_DelLastCh,None,TChA)
TChA.Push = new_instancemethod(_snap.TChA_Push,None,TChA)
TChA.Pop = new_instancemethod(_snap.TChA_Pop,None,TChA)
TChA.Trunc = new_instancemethod(_snap.TChA_Trunc,None,TChA)
TChA.Reverse = new_instancemethod(_snap.TChA_Reverse,None,TChA)
TChA.AddCh = new_instancemethod(_snap.TChA_AddCh,None,TChA)
TChA.AddChTo = new_instancemethod(_snap.TChA_AddChTo,None,TChA)
TChA.AddBf = new_instancemethod(_snap.TChA_AddBf,None,TChA)
TChA.PutCh = new_instancemethod(_snap.TChA_PutCh,None,TChA)
TChA.GetCh = new_instancemethod(_snap.TChA_GetCh,None,TChA)
TChA.LastCh = new_instancemethod(_snap.TChA_LastCh,None,TChA)
TChA.LastLastCh = new_instancemethod(_snap.TChA_LastLastCh,None,TChA)
TChA.GetSubStr = new_instancemethod(_snap.TChA_GetSubStr,None,TChA)
TChA.CountCh = new_instancemethod(_snap.TChA_CountCh,None,TChA)
TChA.SearchCh = new_instancemethod(_snap.TChA_SearchCh,None,TChA)
TChA.SearchChBack = new_instancemethod(_snap.TChA_SearchChBack,None,TChA)
TChA.SearchStr = new_instancemethod(_snap.TChA_SearchStr,None,TChA)
TChA.IsStrIn = new_instancemethod(_snap.TChA_IsStrIn,None,TChA)
TChA.IsPrefix = new_instancemethod(_snap.TChA_IsPrefix,None,TChA)
TChA.IsSuffix = new_instancemethod(_snap.TChA_IsSuffix,None,TChA)
TChA.IsChIn = new_instancemethod(_snap.TChA_IsChIn,None,TChA)
TChA.ChangeCh = new_instancemethod(_snap.TChA_ChangeCh,None,TChA)
TChA.ToUc = new_instancemethod(_snap.TChA_ToUc,None,TChA)
TChA.ToLc = new_instancemethod(_snap.TChA_ToLc,None,TChA)
TChA.ToTrunc = new_instancemethod(_snap.TChA_ToTrunc,None,TChA)
TChA.CompressWs = new_instancemethod(_snap.TChA_CompressWs,None,TChA)
TChA.Swap = new_instancemethod(_snap.TChA_Swap,None,TChA)
TChA.GetPrimHashCd = new_instancemethod(_snap.TChA_GetPrimHashCd,None,TChA)
TChA.GetSecHashCd = new_instancemethod(_snap.TChA_GetSecHashCd,None,TChA)
TChA.SaveTxt = new_instancemethod(_snap.TChA_SaveTxt,None,TChA)
TChA_swigregister = _snap.TChA_swigregister
TChA_swigregister(TChA)

def TChA_LoadTxt(*args):
  return _snap.TChA_LoadTxt(*args)
TChA_LoadTxt = _snap.TChA_LoadTxt

class TChAIn(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TChAIn_swiginit(self,_snap.new_TChAIn(*args))
    New = staticmethod(_snap.TChAIn_New)
    __swig_destroy__ = _snap.delete_TChAIn
TChAIn.Eof = new_instancemethod(_snap.TChAIn_Eof,None,TChAIn)
TChAIn.Len = new_instancemethod(_snap.TChAIn_Len,None,TChAIn)
TChAIn.GetCh = new_instancemethod(_snap.TChAIn_GetCh,None,TChAIn)
TChAIn.PeekCh = new_instancemethod(_snap.TChAIn_PeekCh,None,TChAIn)
TChAIn.GetBf = new_instancemethod(_snap.TChAIn_GetBf,None,TChAIn)
TChAIn.Reset = new_instancemethod(_snap.TChAIn_Reset,None,TChAIn)
TChAIn.GetNextLnBf = new_instancemethod(_snap.TChAIn_GetNextLnBf,None,TChAIn)
TChAIn_swigregister = _snap.TChAIn_swigregister
TChAIn_swigregister(TChAIn)

def TChAIn_New(*args):
  return _snap.TChAIn_New(*args)
TChAIn_New = _snap.TChAIn_New

class TRStr(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Bf = _swig_property(_snap.TRStr_Bf_get, _snap.TRStr_Bf_set)
    Refs = _swig_property(_snap.TRStr_Refs_get, _snap.TRStr_Refs_set)
    __swig_destroy__ = _snap.delete_TRStr
    def __init__(self, *args): 
        _snap.TRStr_swiginit(self,_snap.new_TRStr(*args))
    CmpI = staticmethod(_snap.TRStr_CmpI)
    GetNullRStr = staticmethod(_snap.TRStr_GetNullRStr)
TRStr.Save = new_instancemethod(_snap.TRStr_Save,None,TRStr)
TRStr.GetMemUsed = new_instancemethod(_snap.TRStr_GetMemUsed,None,TRStr)
TRStr.MkRef = new_instancemethod(_snap.TRStr_MkRef,None,TRStr)
TRStr.UnRef = new_instancemethod(_snap.TRStr_UnRef,None,TRStr)
TRStr.CStr = new_instancemethod(_snap.TRStr_CStr,None,TRStr)
TRStr.Empty = new_instancemethod(_snap.TRStr_Empty,None,TRStr)
TRStr.Len = new_instancemethod(_snap.TRStr_Len,None,TRStr)
TRStr.PutCh = new_instancemethod(_snap.TRStr_PutCh,None,TRStr)
TRStr.GetCh = new_instancemethod(_snap.TRStr_GetCh,None,TRStr)
TRStr.IsUc = new_instancemethod(_snap.TRStr_IsUc,None,TRStr)
TRStr.ToUc = new_instancemethod(_snap.TRStr_ToUc,None,TRStr)
TRStr.IsLc = new_instancemethod(_snap.TRStr_IsLc,None,TRStr)
TRStr.ToLc = new_instancemethod(_snap.TRStr_ToLc,None,TRStr)
TRStr.ToCap = new_instancemethod(_snap.TRStr_ToCap,None,TRStr)
TRStr.ConvUsFromYuAscii = new_instancemethod(_snap.TRStr_ConvUsFromYuAscii,None,TRStr)
TRStr.GetPrimHashCd = new_instancemethod(_snap.TRStr_GetPrimHashCd,None,TRStr)
TRStr.GetSecHashCd = new_instancemethod(_snap.TRStr_GetSecHashCd,None,TRStr)
TRStr_swigregister = _snap.TRStr_swigregister
TRStr_swigregister(TRStr)

def TRStr_CmpI(*args):
  return _snap.TRStr_CmpI(*args)
TRStr_CmpI = _snap.TRStr_CmpI

def TRStr_GetNullRStr():
  return _snap.TRStr_GetNullRStr()
TRStr_GetNullRStr = _snap.TRStr_GetNullRStr

class TStr(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _snap.delete_TStr
    def __init__(self, *args): 
        _snap.TStr_swiginit(self,_snap.new_TStr(*args))
    GetNrFPath = staticmethod(_snap.TStr_GetNrFPath)
    GetNrFMid = staticmethod(_snap.TStr_GetNrFMid)
    GetNrFExt = staticmethod(_snap.TStr_GetNrFExt)
    GetNrNumFExt = staticmethod(_snap.TStr_GetNrNumFExt)
    GetNrFNm = staticmethod(_snap.TStr_GetNrFNm)
    GetNrAbsFPath = staticmethod(_snap.TStr_GetNrAbsFPath)
    IsAbsFPath = staticmethod(_snap.TStr_IsAbsFPath)
    PutFExt = staticmethod(_snap.TStr_PutFExt)
    PutFExtIfEmpty = staticmethod(_snap.TStr_PutFExtIfEmpty)
    PutFBase = staticmethod(_snap.TStr_PutFBase)
    PutFBaseIfEmpty = staticmethod(_snap.TStr_PutFBaseIfEmpty)
    AddToFMid = staticmethod(_snap.TStr_AddToFMid)
    GetNumFNm = staticmethod(_snap.TStr_GetNumFNm)
    GetFNmStr = staticmethod(_snap.TStr_GetFNmStr)
    LoadTxt = staticmethod(_snap.TStr_LoadTxt)
    GetChStr = staticmethod(_snap.TStr_GetChStr)
    GetDChStr = staticmethod(_snap.TStr_GetDChStr)
    Fmt = staticmethod(_snap.TStr_Fmt)
    GetSpaceStr = staticmethod(_snap.TStr_GetSpaceStr)
    MkClone = staticmethod(_snap.TStr_MkClone)
    GetNullStr = staticmethod(_snap.TStr_GetNullStr)
TStr.Load = new_instancemethod(_snap.TStr_Load,None,TStr)
TStr.Save = new_instancemethod(_snap.TStr_Save,None,TStr)
TStr.LoadXml = new_instancemethod(_snap.TStr_LoadXml,None,TStr)
TStr.SaveXml = new_instancemethod(_snap.TStr_SaveXml,None,TStr)
TStr.__iadd__ = new_instancemethod(_snap.TStr___iadd__,None,TStr)
TStr.__eq__ = new_instancemethod(_snap.TStr___eq__,None,TStr)
TStr.__ne__ = new_instancemethod(_snap.TStr___ne__,None,TStr)
TStr.__lt__ = new_instancemethod(_snap.TStr___lt__,None,TStr)
TStr.GetMemUsed = new_instancemethod(_snap.TStr_GetMemUsed,None,TStr)
TStr.CStr = new_instancemethod(_snap.TStr_CStr,None,TStr)
TStr.PutCh = new_instancemethod(_snap.TStr_PutCh,None,TStr)
TStr.GetCh = new_instancemethod(_snap.TStr_GetCh,None,TStr)
TStr.LastCh = new_instancemethod(_snap.TStr_LastCh,None,TStr)
TStr.Clr = new_instancemethod(_snap.TStr_Clr,None,TStr)
TStr.Len = new_instancemethod(_snap.TStr_Len,None,TStr)
TStr.Empty = new_instancemethod(_snap.TStr_Empty,None,TStr)
TStr.IsUc = new_instancemethod(_snap.TStr_IsUc,None,TStr)
TStr.ToUc = new_instancemethod(_snap.TStr_ToUc,None,TStr)
TStr.GetUc = new_instancemethod(_snap.TStr_GetUc,None,TStr)
TStr.CmpI = new_instancemethod(_snap.TStr_CmpI,None,TStr)
TStr.EqI = new_instancemethod(_snap.TStr_EqI,None,TStr)
TStr.IsLc = new_instancemethod(_snap.TStr_IsLc,None,TStr)
TStr.ToLc = new_instancemethod(_snap.TStr_ToLc,None,TStr)
TStr.GetLc = new_instancemethod(_snap.TStr_GetLc,None,TStr)
TStr.ToCap = new_instancemethod(_snap.TStr_ToCap,None,TStr)
TStr.GetCap = new_instancemethod(_snap.TStr_GetCap,None,TStr)
TStr.ToTrunc = new_instancemethod(_snap.TStr_ToTrunc,None,TStr)
TStr.GetTrunc = new_instancemethod(_snap.TStr_GetTrunc,None,TStr)
TStr.ConvUsFromYuAscii = new_instancemethod(_snap.TStr_ConvUsFromYuAscii,None,TStr)
TStr.GetUsFromYuAscii = new_instancemethod(_snap.TStr_GetUsFromYuAscii,None,TStr)
TStr.ToHex = new_instancemethod(_snap.TStr_ToHex,None,TStr)
TStr.GetHex = new_instancemethod(_snap.TStr_GetHex,None,TStr)
TStr.FromHex = new_instancemethod(_snap.TStr_FromHex,None,TStr)
TStr.GetFromHex = new_instancemethod(_snap.TStr_GetFromHex,None,TStr)
TStr.GetSubStr = new_instancemethod(_snap.TStr_GetSubStr,None,TStr)
TStr.InsStr = new_instancemethod(_snap.TStr_InsStr,None,TStr)
TStr.DelChAll = new_instancemethod(_snap.TStr_DelChAll,None,TStr)
TStr.DelSubStr = new_instancemethod(_snap.TStr_DelSubStr,None,TStr)
TStr.DelStr = new_instancemethod(_snap.TStr_DelStr,None,TStr)
TStr.LeftOf = new_instancemethod(_snap.TStr_LeftOf,None,TStr)
TStr.LeftOfLast = new_instancemethod(_snap.TStr_LeftOfLast,None,TStr)
TStr.RightOf = new_instancemethod(_snap.TStr_RightOf,None,TStr)
TStr.RightOfLast = new_instancemethod(_snap.TStr_RightOfLast,None,TStr)
TStr.SplitOnCh = new_instancemethod(_snap.TStr_SplitOnCh,None,TStr)
TStr.SplitOnLastCh = new_instancemethod(_snap.TStr_SplitOnLastCh,None,TStr)
TStr.SplitOnAllCh = new_instancemethod(_snap.TStr_SplitOnAllCh,None,TStr)
TStr.SplitOnAllAnyCh = new_instancemethod(_snap.TStr_SplitOnAllAnyCh,None,TStr)
TStr.SplitOnWs = new_instancemethod(_snap.TStr_SplitOnWs,None,TStr)
TStr.SplitOnNonAlNum = new_instancemethod(_snap.TStr_SplitOnNonAlNum,None,TStr)
TStr.SplitOnStr = new_instancemethod(_snap.TStr_SplitOnStr,None,TStr)
TStr.Mid = new_instancemethod(_snap.TStr_Mid,None,TStr)
TStr.Left = new_instancemethod(_snap.TStr_Left,None,TStr)
TStr.Right = new_instancemethod(_snap.TStr_Right,None,TStr)
TStr.Slice = new_instancemethod(_snap.TStr_Slice,None,TStr)
TStr.__call__ = new_instancemethod(_snap.TStr___call__,None,TStr)
TStr.CountCh = new_instancemethod(_snap.TStr_CountCh,None,TStr)
TStr.SearchCh = new_instancemethod(_snap.TStr_SearchCh,None,TStr)
TStr.SearchChBack = new_instancemethod(_snap.TStr_SearchChBack,None,TStr)
TStr.SearchStr = new_instancemethod(_snap.TStr_SearchStr,None,TStr)
TStr.IsChIn = new_instancemethod(_snap.TStr_IsChIn,None,TStr)
TStr.IsStrIn = new_instancemethod(_snap.TStr_IsStrIn,None,TStr)
TStr.IsPrefix = new_instancemethod(_snap.TStr_IsPrefix,None,TStr)
TStr.IsSuffix = new_instancemethod(_snap.TStr_IsSuffix,None,TStr)
TStr.ChangeCh = new_instancemethod(_snap.TStr_ChangeCh,None,TStr)
TStr.ChangeChAll = new_instancemethod(_snap.TStr_ChangeChAll,None,TStr)
TStr.ChangeStr = new_instancemethod(_snap.TStr_ChangeStr,None,TStr)
TStr.ChangeStrAll = new_instancemethod(_snap.TStr_ChangeStrAll,None,TStr)
TStr.Reverse = new_instancemethod(_snap.TStr_Reverse,None,TStr)
TStr.GetPrimHashCd = new_instancemethod(_snap.TStr_GetPrimHashCd,None,TStr)
TStr.GetSecHashCd = new_instancemethod(_snap.TStr_GetSecHashCd,None,TStr)
TStr.IsBool = new_instancemethod(_snap.TStr_IsBool,None,TStr)
TStr.IsInt = new_instancemethod(_snap.TStr_IsInt,None,TStr)
TStr.GetInt = new_instancemethod(_snap.TStr_GetInt,None,TStr)
TStr.IsUInt = new_instancemethod(_snap.TStr_IsUInt,None,TStr)
TStr.GetUInt = new_instancemethod(_snap.TStr_GetUInt,None,TStr)
TStr.IsInt64 = new_instancemethod(_snap.TStr_IsInt64,None,TStr)
TStr.GetInt64 = new_instancemethod(_snap.TStr_GetInt64,None,TStr)
TStr.IsUInt64 = new_instancemethod(_snap.TStr_IsUInt64,None,TStr)
TStr.GetUInt64 = new_instancemethod(_snap.TStr_GetUInt64,None,TStr)
TStr.IsHexInt = new_instancemethod(_snap.TStr_IsHexInt,None,TStr)
TStr.GetHexInt = new_instancemethod(_snap.TStr_GetHexInt,None,TStr)
TStr.IsHexInt64 = new_instancemethod(_snap.TStr_IsHexInt64,None,TStr)
TStr.GetHexInt64 = new_instancemethod(_snap.TStr_GetHexInt64,None,TStr)
TStr.IsFlt = new_instancemethod(_snap.TStr_IsFlt,None,TStr)
TStr.GetFlt = new_instancemethod(_snap.TStr_GetFlt,None,TStr)
TStr.IsWord = new_instancemethod(_snap.TStr_IsWord,None,TStr)
TStr.IsWs = new_instancemethod(_snap.TStr_IsWs,None,TStr)
TStr.IsWcMatch = new_instancemethod(_snap.TStr_IsWcMatch,None,TStr)
TStr.GetWcMatch = new_instancemethod(_snap.TStr_GetWcMatch,None,TStr)
TStr.GetFPath = new_instancemethod(_snap.TStr_GetFPath,None,TStr)
TStr.GetFBase = new_instancemethod(_snap.TStr_GetFBase,None,TStr)
TStr.GetFMid = new_instancemethod(_snap.TStr_GetFMid,None,TStr)
TStr.GetFExt = new_instancemethod(_snap.TStr_GetFExt,None,TStr)
TStr.SaveTxt = new_instancemethod(_snap.TStr_SaveTxt,None,TStr)
TStr.GetCStr = new_instancemethod(_snap.TStr_GetCStr,None,TStr)
TStr_swigregister = _snap.TStr_swigregister
TStr_swigregister(TStr)

def TStr_GetNrFPath(*args):
  return _snap.TStr_GetNrFPath(*args)
TStr_GetNrFPath = _snap.TStr_GetNrFPath

def TStr_GetNrFMid(*args):
  return _snap.TStr_GetNrFMid(*args)
TStr_GetNrFMid = _snap.TStr_GetNrFMid

def TStr_GetNrFExt(*args):
  return _snap.TStr_GetNrFExt(*args)
TStr_GetNrFExt = _snap.TStr_GetNrFExt

def TStr_GetNrNumFExt(*args):
  return _snap.TStr_GetNrNumFExt(*args)
TStr_GetNrNumFExt = _snap.TStr_GetNrNumFExt

def TStr_GetNrFNm(*args):
  return _snap.TStr_GetNrFNm(*args)
TStr_GetNrFNm = _snap.TStr_GetNrFNm

def TStr_GetNrAbsFPath(*args):
  return _snap.TStr_GetNrAbsFPath(*args)
TStr_GetNrAbsFPath = _snap.TStr_GetNrAbsFPath

def TStr_IsAbsFPath(*args):
  return _snap.TStr_IsAbsFPath(*args)
TStr_IsAbsFPath = _snap.TStr_IsAbsFPath

def TStr_PutFExt(*args):
  return _snap.TStr_PutFExt(*args)
TStr_PutFExt = _snap.TStr_PutFExt

def TStr_PutFExtIfEmpty(*args):
  return _snap.TStr_PutFExtIfEmpty(*args)
TStr_PutFExtIfEmpty = _snap.TStr_PutFExtIfEmpty

def TStr_PutFBase(*args):
  return _snap.TStr_PutFBase(*args)
TStr_PutFBase = _snap.TStr_PutFBase

def TStr_PutFBaseIfEmpty(*args):
  return _snap.TStr_PutFBaseIfEmpty(*args)
TStr_PutFBaseIfEmpty = _snap.TStr_PutFBaseIfEmpty

def TStr_AddToFMid(*args):
  return _snap.TStr_AddToFMid(*args)
TStr_AddToFMid = _snap.TStr_AddToFMid

def TStr_GetNumFNm(*args):
  return _snap.TStr_GetNumFNm(*args)
TStr_GetNumFNm = _snap.TStr_GetNumFNm

def TStr_GetFNmStr(*args):
  return _snap.TStr_GetFNmStr(*args)
TStr_GetFNmStr = _snap.TStr_GetFNmStr

def TStr_LoadTxt(*args):
  return _snap.TStr_LoadTxt(*args)
TStr_LoadTxt = _snap.TStr_LoadTxt

def TStr_GetChStr(*args):
  return _snap.TStr_GetChStr(*args)
TStr_GetChStr = _snap.TStr_GetChStr

def TStr_GetDChStr(*args):
  return _snap.TStr_GetDChStr(*args)
TStr_GetDChStr = _snap.TStr_GetDChStr

def TStr_Fmt(*args):
  return _snap.TStr_Fmt(*args)
TStr_Fmt = _snap.TStr_Fmt

def TStr_GetSpaceStr(*args):
  return _snap.TStr_GetSpaceStr(*args)
TStr_GetSpaceStr = _snap.TStr_GetSpaceStr

def TStr_MkClone(*args):
  return _snap.TStr_MkClone(*args)
TStr_MkClone = _snap.TStr_MkClone

def TStr_GetNullStr():
  return _snap.TStr_GetNullStr()
TStr_GetNullStr = _snap.TStr_GetNullStr

class TStrIn(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TStrIn_swiginit(self,_snap.new_TStrIn(*args))
    New = staticmethod(_snap.TStrIn_New)
    __swig_destroy__ = _snap.delete_TStrIn
TStrIn.Eof = new_instancemethod(_snap.TStrIn_Eof,None,TStrIn)
TStrIn.Len = new_instancemethod(_snap.TStrIn_Len,None,TStrIn)
TStrIn.GetCh = new_instancemethod(_snap.TStrIn_GetCh,None,TStrIn)
TStrIn.PeekCh = new_instancemethod(_snap.TStrIn_PeekCh,None,TStrIn)
TStrIn.GetBf = new_instancemethod(_snap.TStrIn_GetBf,None,TStrIn)
TStrIn.Reset = new_instancemethod(_snap.TStrIn_Reset,None,TStrIn)
TStrIn.GetNextLnBf = new_instancemethod(_snap.TStrIn_GetNextLnBf,None,TStrIn)
TStrIn_swigregister = _snap.TStrIn_swigregister
TStrIn_swigregister(TStrIn)

def TStrIn_New(*args):
  return _snap.TStrIn_New(*args)
TStrIn_New = _snap.TStrIn_New

class TDbStr(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Str1 = _swig_property(_snap.TDbStr_Str1_get, _snap.TDbStr_Str1_set)
    Str2 = _swig_property(_snap.TDbStr_Str2_get, _snap.TDbStr_Str2_set)
    def __init__(self, *args): 
        _snap.TDbStr_swiginit(self,_snap.new_TDbStr(*args))
    __swig_destroy__ = _snap.delete_TDbStr
TDbStr.Save = new_instancemethod(_snap.TDbStr_Save,None,TDbStr)
TDbStr.__eq__ = new_instancemethod(_snap.TDbStr___eq__,None,TDbStr)
TDbStr.__lt__ = new_instancemethod(_snap.TDbStr___lt__,None,TDbStr)
TDbStr.GetPrimHashCd = new_instancemethod(_snap.TDbStr_GetPrimHashCd,None,TDbStr)
TDbStr.GetSecHashCd = new_instancemethod(_snap.TDbStr_GetSecHashCd,None,TDbStr)
TDbStr.Empty = new_instancemethod(_snap.TDbStr_Empty,None,TDbStr)
TDbStr.Filled = new_instancemethod(_snap.TDbStr_Filled,None,TDbStr)
TDbStr_swigregister = _snap.TDbStr_swigregister
TDbStr_swigregister(TDbStr)

class TStrPool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TStrPool_swiginit(self,_snap.new_TStrPool(*args))
    __swig_destroy__ = _snap.delete_TStrPool
    New = staticmethod(_snap.TStrPool_New)
    Load = staticmethod(_snap.TStrPool_Load)
TStrPool.Save = new_instancemethod(_snap.TStrPool_Save,None,TStrPool)
TStrPool.Len = new_instancemethod(_snap.TStrPool_Len,None,TStrPool)
TStrPool.Size = new_instancemethod(_snap.TStrPool_Size,None,TStrPool)
TStrPool.Empty = new_instancemethod(_snap.TStrPool_Empty,None,TStrPool)
TStrPool.__call__ = new_instancemethod(_snap.TStrPool___call__,None,TStrPool)
TStrPool.AddStr = new_instancemethod(_snap.TStrPool_AddStr,None,TStrPool)
TStrPool.GetCStr = new_instancemethod(_snap.TStrPool_GetCStr,None,TStrPool)
TStrPool.Clr = new_instancemethod(_snap.TStrPool_Clr,None,TStrPool)
TStrPool.Cmp = new_instancemethod(_snap.TStrPool_Cmp,None,TStrPool)
TStrPool.GetPrimHashCd = new_instancemethod(_snap.TStrPool_GetPrimHashCd,None,TStrPool)
TStrPool.GetSecHashCd = new_instancemethod(_snap.TStrPool_GetSecHashCd,None,TStrPool)
TStrPool_swigregister = _snap.TStrPool_swigregister
TStrPool_swigregister(TStrPool)

def TStrPool_New(*args):
  return _snap.TStrPool_New(*args)
TStrPool_New = _snap.TStrPool_New

def TStrPool_Load(*args):
  return _snap.TStrPool_Load(*args)
TStrPool_Load = _snap.TStrPool_Load

class TStrPool64(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TStrPool64_swiginit(self,_snap.new_TStrPool64(*args))
    __swig_destroy__ = _snap.delete_TStrPool64
    New = staticmethod(_snap.TStrPool64_New)
    Load = staticmethod(_snap.TStrPool64_Load)
TStrPool64.Save = new_instancemethod(_snap.TStrPool64_Save,None,TStrPool64)
TStrPool64.GetMemUsed = new_instancemethod(_snap.TStrPool64_GetMemUsed,None,TStrPool64)
TStrPool64.Empty = new_instancemethod(_snap.TStrPool64_Empty,None,TStrPool64)
TStrPool64.Len = new_instancemethod(_snap.TStrPool64_Len,None,TStrPool64)
TStrPool64.Reserved = new_instancemethod(_snap.TStrPool64_Reserved,None,TStrPool64)
TStrPool64.Clr = new_instancemethod(_snap.TStrPool64_Clr,None,TStrPool64)
TStrPool64.Cmp = new_instancemethod(_snap.TStrPool64_Cmp,None,TStrPool64)
TStrPool64.AddStr = new_instancemethod(_snap.TStrPool64_AddStr,None,TStrPool64)
TStrPool64_swigregister = _snap.TStrPool64_swigregister
TStrPool64_swigregister(TStrPool64)

def TStrPool64_New(MxBfL=0, GrowBy=16*1024*1024):
  return _snap.TStrPool64_New(MxBfL, GrowBy)
TStrPool64_New = _snap.TStrPool64_New

def TStrPool64_Load(*args):
  return _snap.TStrPool64_Load(*args)
TStrPool64_Load = _snap.TStrPool64_Load

class TVoid(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TVoid_swiginit(self,_snap.new_TVoid(*args))
    __swig_destroy__ = _snap.delete_TVoid
TVoid.Save = new_instancemethod(_snap.TVoid_Save,None,TVoid)
TVoid.LoadXml = new_instancemethod(_snap.TVoid_LoadXml,None,TVoid)
TVoid.SaveXml = new_instancemethod(_snap.TVoid_SaveXml,None,TVoid)
TVoid.__eq__ = new_instancemethod(_snap.TVoid___eq__,None,TVoid)
TVoid.__lt__ = new_instancemethod(_snap.TVoid___lt__,None,TVoid)
TVoid.GetMemUsed = new_instancemethod(_snap.TVoid_GetMemUsed,None,TVoid)
TVoid_swigregister = _snap.TVoid_swigregister
TVoid_swigregister(TVoid)

class TBool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TBool_Val_get, _snap.TBool_Val_set)
    Rnd = _swig_property(_snap.TBool_Rnd_get, _snap.TBool_Rnd_set)
    def __nonzero__(self):
        return _snap.TBool___nonzero__(self)
    __bool__ = __nonzero__


    def __init__(self, *args): 
        _snap.TBool_swiginit(self,_snap.new_TBool(*args))
    GetRnd = staticmethod(_snap.TBool_GetRnd)
    GetYNStr = staticmethod(_snap.TBool_GetYNStr)
    GetYesNoStr = staticmethod(_snap.TBool_GetYesNoStr)
    Get01Str = staticmethod(_snap.TBool_Get01Str)
    IsValStr = staticmethod(_snap.TBool_IsValStr)
    GetValFromStr = staticmethod(_snap.TBool_GetValFromStr)
    __swig_destroy__ = _snap.delete_TBool
TBool.Load = new_instancemethod(_snap.TBool_Load,None,TBool)
TBool.Save = new_instancemethod(_snap.TBool_Save,None,TBool)
TBool.LoadXml = new_instancemethod(_snap.TBool_LoadXml,None,TBool)
TBool.SaveXml = new_instancemethod(_snap.TBool_SaveXml,None,TBool)
TBool.__eq__ = new_instancemethod(_snap.TBool___eq__,None,TBool)
TBool.__lt__ = new_instancemethod(_snap.TBool___lt__,None,TBool)
TBool.__call__ = new_instancemethod(_snap.TBool___call__,None,TBool)
TBool.GetMemUsed = new_instancemethod(_snap.TBool_GetMemUsed,None,TBool)
TBool.GetPrimHashCd = new_instancemethod(_snap.TBool_GetPrimHashCd,None,TBool)
TBool.GetSecHashCd = new_instancemethod(_snap.TBool_GetSecHashCd,None,TBool)
TBool_swigregister = _snap.TBool_swigregister
TBool_swigregister(TBool)
TBool.Mn = _snap.cvar.TBool_Mn
TBool.Mx = _snap.cvar.TBool_Mx
TBool.Vals = _snap.cvar.TBool_Vals
TBool.FalseStr = _snap.cvar.TBool_FalseStr
TBool.TrueStr = _snap.cvar.TBool_TrueStr
TBool.NStr = _snap.cvar.TBool_NStr
TBool.YStr = _snap.cvar.TBool_YStr
TBool.NoStr = _snap.cvar.TBool_NoStr
TBool.YesStr = _snap.cvar.TBool_YesStr

def TBool_GetRnd():
  return _snap.TBool_GetRnd()
TBool_GetRnd = _snap.TBool_GetRnd

def TBool_GetYNStr(*args):
  return _snap.TBool_GetYNStr(*args)
TBool_GetYNStr = _snap.TBool_GetYNStr

def TBool_GetYesNoStr(*args):
  return _snap.TBool_GetYesNoStr(*args)
TBool_GetYesNoStr = _snap.TBool_GetYesNoStr

def TBool_Get01Str(*args):
  return _snap.TBool_Get01Str(*args)
TBool_Get01Str = _snap.TBool_Get01Str

def TBool_IsValStr(*args):
  return _snap.TBool_IsValStr(*args)
TBool_IsValStr = _snap.TBool_IsValStr

def TBool_GetValFromStr(*args):
  return _snap.TBool_GetValFromStr(*args)
TBool_GetValFromStr = _snap.TBool_GetValFromStr

class TCh(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TCh_Val_get, _snap.TCh_Val_set)
    def __init__(self, *args): 
        _snap.TCh_swiginit(self,_snap.new_TCh(*args))
    IsWs = staticmethod(_snap.TCh_IsWs)
    IsAlpha = staticmethod(_snap.TCh_IsAlpha)
    IsNum = staticmethod(_snap.TCh_IsNum)
    IsAlNum = staticmethod(_snap.TCh_IsAlNum)
    GetNum = staticmethod(_snap.TCh_GetNum)
    IsHex = staticmethod(_snap.TCh_IsHex)
    GetHex = staticmethod(_snap.TCh_GetHex)
    GetHexCh = staticmethod(_snap.TCh_GetHexCh)
    IsUc = staticmethod(_snap.TCh_IsUc)
    GetUc = staticmethod(_snap.TCh_GetUc)
    GetUsFromYuAscii = staticmethod(_snap.TCh_GetUsFromYuAscii)
    __swig_destroy__ = _snap.delete_TCh
TCh.Save = new_instancemethod(_snap.TCh_Save,None,TCh)
TCh.LoadXml = new_instancemethod(_snap.TCh_LoadXml,None,TCh)
TCh.SaveXml = new_instancemethod(_snap.TCh_SaveXml,None,TCh)
TCh.__eq__ = new_instancemethod(_snap.TCh___eq__,None,TCh)
TCh.__lt__ = new_instancemethod(_snap.TCh___lt__,None,TCh)
TCh.__call__ = new_instancemethod(_snap.TCh___call__,None,TCh)
TCh.GetMemUsed = new_instancemethod(_snap.TCh_GetMemUsed,None,TCh)
TCh.GetPrimHashCd = new_instancemethod(_snap.TCh_GetPrimHashCd,None,TCh)
TCh.GetSecHashCd = new_instancemethod(_snap.TCh_GetSecHashCd,None,TCh)
TCh_swigregister = _snap.TCh_swigregister
TCh_swigregister(TCh)
TCh.Mn = _snap.cvar.TCh_Mn
TCh.Mx = _snap.cvar.TCh_Mx
TCh.Vals = _snap.cvar.TCh_Vals
TCh.NullCh = _snap.cvar.TCh_NullCh
TCh.TabCh = _snap.cvar.TCh_TabCh
TCh.LfCh = _snap.cvar.TCh_LfCh
TCh.CrCh = _snap.cvar.TCh_CrCh
TCh.EofCh = _snap.cvar.TCh_EofCh
TCh.HashCh = _snap.cvar.TCh_HashCh

def TCh_IsWs(*args):
  return _snap.TCh_IsWs(*args)
TCh_IsWs = _snap.TCh_IsWs

def TCh_IsAlpha(*args):
  return _snap.TCh_IsAlpha(*args)
TCh_IsAlpha = _snap.TCh_IsAlpha

def TCh_IsNum(*args):
  return _snap.TCh_IsNum(*args)
TCh_IsNum = _snap.TCh_IsNum

def TCh_IsAlNum(*args):
  return _snap.TCh_IsAlNum(*args)
TCh_IsAlNum = _snap.TCh_IsAlNum

def TCh_GetNum(*args):
  return _snap.TCh_GetNum(*args)
TCh_GetNum = _snap.TCh_GetNum

def TCh_IsHex(*args):
  return _snap.TCh_IsHex(*args)
TCh_IsHex = _snap.TCh_IsHex

def TCh_GetHex(*args):
  return _snap.TCh_GetHex(*args)
TCh_GetHex = _snap.TCh_GetHex

def TCh_GetHexCh(*args):
  return _snap.TCh_GetHexCh(*args)
TCh_GetHexCh = _snap.TCh_GetHexCh

def TCh_IsUc(*args):
  return _snap.TCh_IsUc(*args)
TCh_IsUc = _snap.TCh_IsUc

def TCh_GetUc(*args):
  return _snap.TCh_GetUc(*args)
TCh_GetUc = _snap.TCh_GetUc

def TCh_GetUsFromYuAscii(*args):
  return _snap.TCh_GetUsFromYuAscii(*args)
TCh_GetUsFromYuAscii = _snap.TCh_GetUsFromYuAscii

class TUCh(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TUCh_Val_get, _snap.TUCh_Val_set)
    def __init__(self, *args): 
        _snap.TUCh_swiginit(self,_snap.new_TUCh(*args))
    __swig_destroy__ = _snap.delete_TUCh
TUCh.Save = new_instancemethod(_snap.TUCh_Save,None,TUCh)
TUCh.LoadXml = new_instancemethod(_snap.TUCh_LoadXml,None,TUCh)
TUCh.SaveXml = new_instancemethod(_snap.TUCh_SaveXml,None,TUCh)
TUCh.__eq__ = new_instancemethod(_snap.TUCh___eq__,None,TUCh)
TUCh.__lt__ = new_instancemethod(_snap.TUCh___lt__,None,TUCh)
TUCh.__call__ = new_instancemethod(_snap.TUCh___call__,None,TUCh)
TUCh.GetMemUsed = new_instancemethod(_snap.TUCh_GetMemUsed,None,TUCh)
TUCh.GetPrimHashCd = new_instancemethod(_snap.TUCh_GetPrimHashCd,None,TUCh)
TUCh.GetSecHashCd = new_instancemethod(_snap.TUCh_GetSecHashCd,None,TUCh)
TUCh_swigregister = _snap.TUCh_swigregister
TUCh_swigregister(TUCh)
TUCh.Mn = _snap.cvar.TUCh_Mn
TUCh.Mx = _snap.cvar.TUCh_Mx
TUCh.Vals = _snap.cvar.TUCh_Vals

class TSInt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TSInt_Val_get, _snap.TSInt_Val_set)
    def __init__(self, *args): 
        _snap.TSInt_swiginit(self,_snap.new_TSInt(*args))
    __swig_destroy__ = _snap.delete_TSInt
TSInt.Load = new_instancemethod(_snap.TSInt_Load,None,TSInt)
TSInt.Save = new_instancemethod(_snap.TSInt_Save,None,TSInt)
TSInt.GetPrimHashCd = new_instancemethod(_snap.TSInt_GetPrimHashCd,None,TSInt)
TSInt.GetSecHashCd = new_instancemethod(_snap.TSInt_GetSecHashCd,None,TSInt)
TSInt_swigregister = _snap.TSInt_swigregister
TSInt_swigregister(TSInt)

class TInt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TInt_Val_get, _snap.TInt_Val_set)
    Rnd = _swig_property(_snap.TInt_Rnd_get, _snap.TInt_Rnd_set)
    def __init__(self, *args): 
        _snap.TInt_swiginit(self,_snap.new_TInt(*args))
    Abs = staticmethod(_snap.TInt_Abs)
    Sign = staticmethod(_snap.TInt_Sign)
    Swap = staticmethod(_snap.TInt_Swap)
    GetRnd = staticmethod(_snap.TInt_GetRnd)
    IsOdd = staticmethod(_snap.TInt_IsOdd)
    IsEven = staticmethod(_snap.TInt_IsEven)
    GetMn = staticmethod(_snap.TInt_GetMn)
    GetMx = staticmethod(_snap.TInt_GetMx)
    GetInRng = staticmethod(_snap.TInt_GetInRng)
    GetHexStr = staticmethod(_snap.TInt_GetHexStr)
    GetKiloStr = staticmethod(_snap.TInt_GetKiloStr)
    GetMegaStr = staticmethod(_snap.TInt_GetMegaStr)
    SaveFrugalInt = staticmethod(_snap.TInt_SaveFrugalInt)
    LoadFrugalInt = staticmethod(_snap.TInt_LoadFrugalInt)
    TestFrugalInt = staticmethod(_snap.TInt_TestFrugalInt)
    SaveFrugalIntV = staticmethod(_snap.TInt_SaveFrugalIntV)
    LoadFrugalIntV = staticmethod(_snap.TInt_LoadFrugalIntV)
    __swig_destroy__ = _snap.delete_TInt
TInt.Load = new_instancemethod(_snap.TInt_Load,None,TInt)
TInt.Save = new_instancemethod(_snap.TInt_Save,None,TInt)
TInt.LoadXml = new_instancemethod(_snap.TInt_LoadXml,None,TInt)
TInt.SaveXml = new_instancemethod(_snap.TInt_SaveXml,None,TInt)
TInt.__eq__ = new_instancemethod(_snap.TInt___eq__,None,TInt)
TInt.__ne__ = new_instancemethod(_snap.TInt___ne__,None,TInt)
TInt.__lt__ = new_instancemethod(_snap.TInt___lt__,None,TInt)
TInt.__call__ = new_instancemethod(_snap.TInt___call__,None,TInt)
TInt.__iadd__ = new_instancemethod(_snap.TInt___iadd__,None,TInt)
TInt.__isub__ = new_instancemethod(_snap.TInt___isub__,None,TInt)
TInt.GetMemUsed = new_instancemethod(_snap.TInt_GetMemUsed,None,TInt)
TInt.GetPrimHashCd = new_instancemethod(_snap.TInt_GetPrimHashCd,None,TInt)
TInt.GetSecHashCd = new_instancemethod(_snap.TInt_GetSecHashCd,None,TInt)
TInt_swigregister = _snap.TInt_swigregister
TInt_swigregister(TInt)
TInt.Mn = _snap.cvar.TInt_Mn
TInt.Mx = _snap.cvar.TInt_Mx
TInt.Kilo = _snap.cvar.TInt_Kilo
TInt.Mega = _snap.cvar.TInt_Mega
TInt.Giga = _snap.cvar.TInt_Giga

def TInt_Abs(*args):
  return _snap.TInt_Abs(*args)
TInt_Abs = _snap.TInt_Abs

def TInt_Sign(*args):
  return _snap.TInt_Sign(*args)
TInt_Sign = _snap.TInt_Sign

def TInt_Swap(*args):
  return _snap.TInt_Swap(*args)
TInt_Swap = _snap.TInt_Swap

def TInt_GetRnd(Range=0):
  return _snap.TInt_GetRnd(Range)
TInt_GetRnd = _snap.TInt_GetRnd

def TInt_IsOdd(*args):
  return _snap.TInt_IsOdd(*args)
TInt_IsOdd = _snap.TInt_IsOdd

def TInt_IsEven(*args):
  return _snap.TInt_IsEven(*args)
TInt_IsEven = _snap.TInt_IsEven

def TInt_GetMn(*args):
  return _snap.TInt_GetMn(*args)
TInt_GetMn = _snap.TInt_GetMn

def TInt_GetMx(*args):
  return _snap.TInt_GetMx(*args)
TInt_GetMx = _snap.TInt_GetMx

def TInt_GetInRng(*args):
  return _snap.TInt_GetInRng(*args)
TInt_GetInRng = _snap.TInt_GetInRng

def TInt_GetHexStr(*args):
  return _snap.TInt_GetHexStr(*args)
TInt_GetHexStr = _snap.TInt_GetHexStr

def TInt_GetKiloStr(*args):
  return _snap.TInt_GetKiloStr(*args)
TInt_GetKiloStr = _snap.TInt_GetKiloStr

def TInt_GetMegaStr(*args):
  return _snap.TInt_GetMegaStr(*args)
TInt_GetMegaStr = _snap.TInt_GetMegaStr

def TInt_SaveFrugalInt(*args):
  return _snap.TInt_SaveFrugalInt(*args)
TInt_SaveFrugalInt = _snap.TInt_SaveFrugalInt

def TInt_LoadFrugalInt(*args):
  return _snap.TInt_LoadFrugalInt(*args)
TInt_LoadFrugalInt = _snap.TInt_LoadFrugalInt

def TInt_TestFrugalInt():
  return _snap.TInt_TestFrugalInt()
TInt_TestFrugalInt = _snap.TInt_TestFrugalInt

def TInt_SaveFrugalIntV(*args):
  return _snap.TInt_SaveFrugalIntV(*args)
TInt_SaveFrugalIntV = _snap.TInt_SaveFrugalIntV

def TInt_LoadFrugalIntV(*args):
  return _snap.TInt_LoadFrugalIntV(*args)
TInt_LoadFrugalIntV = _snap.TInt_LoadFrugalIntV

class TUInt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TUInt_Val_get, _snap.TUInt_Val_set)
    Rnd = _swig_property(_snap.TUInt_Rnd_get, _snap.TUInt_Rnd_set)
    def __init__(self, *args): 
        _snap.TUInt_swiginit(self,_snap.new_TUInt(*args))
    GetRnd = staticmethod(_snap.TUInt_GetRnd)
    GetKiloStr = staticmethod(_snap.TUInt_GetKiloStr)
    GetMegaStr = staticmethod(_snap.TUInt_GetMegaStr)
    JavaUIntToCppUInt = staticmethod(_snap.TUInt_JavaUIntToCppUInt)
    IsIpStr = staticmethod(_snap.TUInt_IsIpStr)
    GetUIntFromIpStr = staticmethod(_snap.TUInt_GetUIntFromIpStr)
    GetStrFromIpUInt = staticmethod(_snap.TUInt_GetStrFromIpUInt)
    __swig_destroy__ = _snap.delete_TUInt
TUInt.Load = new_instancemethod(_snap.TUInt_Load,None,TUInt)
TUInt.Save = new_instancemethod(_snap.TUInt_Save,None,TUInt)
TUInt.LoadXml = new_instancemethod(_snap.TUInt_LoadXml,None,TUInt)
TUInt.SaveXml = new_instancemethod(_snap.TUInt_SaveXml,None,TUInt)
TUInt.__call__ = new_instancemethod(_snap.TUInt___call__,None,TUInt)
TUInt.__invert__ = new_instancemethod(_snap.TUInt___invert__,None,TUInt)
TUInt.__iand__ = new_instancemethod(_snap.TUInt___iand__,None,TUInt)
TUInt.__ior__ = new_instancemethod(_snap.TUInt___ior__,None,TUInt)
TUInt.__ixor__ = new_instancemethod(_snap.TUInt___ixor__,None,TUInt)
TUInt.__irshift__ = new_instancemethod(_snap.TUInt___irshift__,None,TUInt)
TUInt.__ilshift__ = new_instancemethod(_snap.TUInt___ilshift__,None,TUInt)
TUInt.GetMemUsed = new_instancemethod(_snap.TUInt_GetMemUsed,None,TUInt)
TUInt.GetPrimHashCd = new_instancemethod(_snap.TUInt_GetPrimHashCd,None,TUInt)
TUInt.GetSecHashCd = new_instancemethod(_snap.TUInt_GetSecHashCd,None,TUInt)
TUInt_swigregister = _snap.TUInt_swigregister
TUInt_swigregister(TUInt)
TUInt.Mn = _snap.cvar.TUInt_Mn
TUInt.Mx = _snap.cvar.TUInt_Mx

def TUInt_GetRnd(Range=0):
  return _snap.TUInt_GetRnd(Range)
TUInt_GetRnd = _snap.TUInt_GetRnd

def TUInt_GetKiloStr(*args):
  return _snap.TUInt_GetKiloStr(*args)
TUInt_GetKiloStr = _snap.TUInt_GetKiloStr

def TUInt_GetMegaStr(*args):
  return _snap.TUInt_GetMegaStr(*args)
TUInt_GetMegaStr = _snap.TUInt_GetMegaStr

def TUInt_JavaUIntToCppUInt(*args):
  return _snap.TUInt_JavaUIntToCppUInt(*args)
TUInt_JavaUIntToCppUInt = _snap.TUInt_JavaUIntToCppUInt

def TUInt_IsIpStr(*args):
  return _snap.TUInt_IsIpStr(*args)
TUInt_IsIpStr = _snap.TUInt_IsIpStr

def TUInt_GetUIntFromIpStr(*args):
  return _snap.TUInt_GetUIntFromIpStr(*args)
TUInt_GetUIntFromIpStr = _snap.TUInt_GetUIntFromIpStr

def TUInt_GetStrFromIpUInt(*args):
  return _snap.TUInt_GetStrFromIpUInt(*args)
TUInt_GetStrFromIpUInt = _snap.TUInt_GetStrFromIpUInt

class TUInt64(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TUInt64_Val_get, _snap.TUInt64_Val_set)
    def __init__(self, *args): 
        _snap.TUInt64_swiginit(self,_snap.new_TUInt64(*args))
    GetHexStr = staticmethod(_snap.TUInt64_GetHexStr)
    GetKiloStr = staticmethod(_snap.TUInt64_GetKiloStr)
    GetMegaStr = staticmethod(_snap.TUInt64_GetMegaStr)
    __swig_destroy__ = _snap.delete_TUInt64
TUInt64.Load = new_instancemethod(_snap.TUInt64_Load,None,TUInt64)
TUInt64.Save = new_instancemethod(_snap.TUInt64_Save,None,TUInt64)
TUInt64.LoadXml = new_instancemethod(_snap.TUInt64_LoadXml,None,TUInt64)
TUInt64.SaveXml = new_instancemethod(_snap.TUInt64_SaveXml,None,TUInt64)
TUInt64.__iadd__ = new_instancemethod(_snap.TUInt64___iadd__,None,TUInt64)
TUInt64.__isub__ = new_instancemethod(_snap.TUInt64___isub__,None,TUInt64)
TUInt64.GetMemUsed = new_instancemethod(_snap.TUInt64_GetMemUsed,None,TUInt64)
TUInt64.GetPrimHashCd = new_instancemethod(_snap.TUInt64_GetPrimHashCd,None,TUInt64)
TUInt64.GetSecHashCd = new_instancemethod(_snap.TUInt64_GetSecHashCd,None,TUInt64)
TUInt64.GetMsVal = new_instancemethod(_snap.TUInt64_GetMsVal,None,TUInt64)
TUInt64.GetLsVal = new_instancemethod(_snap.TUInt64_GetLsVal,None,TUInt64)
TUInt64_swigregister = _snap.TUInt64_swigregister
TUInt64_swigregister(TUInt64)
TUInt64.Mn = _snap.cvar.TUInt64_Mn
TUInt64.Mx = _snap.cvar.TUInt64_Mx

def TUInt64_GetHexStr(*args):
  return _snap.TUInt64_GetHexStr(*args)
TUInt64_GetHexStr = _snap.TUInt64_GetHexStr

def TUInt64_GetKiloStr(*args):
  return _snap.TUInt64_GetKiloStr(*args)
TUInt64_GetKiloStr = _snap.TUInt64_GetKiloStr

def TUInt64_GetMegaStr(*args):
  return _snap.TUInt64_GetMegaStr(*args)
TUInt64_GetMegaStr = _snap.TUInt64_GetMegaStr

class TFlt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TFlt_Val_get, _snap.TFlt_Val_set)
    Rnd = _swig_property(_snap.TFlt_Rnd_get, _snap.TFlt_Rnd_set)
    def __init__(self, *args): 
        _snap.TFlt_swiginit(self,_snap.new_TFlt(*args))
    Abs = staticmethod(_snap.TFlt_Abs)
    Sign = staticmethod(_snap.TFlt_Sign)
    Round = staticmethod(_snap.TFlt_Round)
    GetRnd = staticmethod(_snap.TFlt_GetRnd)
    Eq6 = staticmethod(_snap.TFlt_Eq6)
    GetMn = staticmethod(_snap.TFlt_GetMn)
    GetMx = staticmethod(_snap.TFlt_GetMx)
    GetInRng = staticmethod(_snap.TFlt_GetInRng)
    GetPrcStr = staticmethod(_snap.TFlt_GetPrcStr)
    GetKiloStr = staticmethod(_snap.TFlt_GetKiloStr)
    GetMegaStr = staticmethod(_snap.TFlt_GetMegaStr)
    GetGigaStr = staticmethod(_snap.TFlt_GetGigaStr)
    __swig_destroy__ = _snap.delete_TFlt
TFlt.Load = new_instancemethod(_snap.TFlt_Load,None,TFlt)
TFlt.Save = new_instancemethod(_snap.TFlt_Save,None,TFlt)
TFlt.LoadXml = new_instancemethod(_snap.TFlt_LoadXml,None,TFlt)
TFlt.SaveXml = new_instancemethod(_snap.TFlt_SaveXml,None,TFlt)
TFlt.__eq__ = new_instancemethod(_snap.TFlt___eq__,None,TFlt)
TFlt.__ne__ = new_instancemethod(_snap.TFlt___ne__,None,TFlt)
TFlt.__call__ = new_instancemethod(_snap.TFlt___call__,None,TFlt)
TFlt.__iadd__ = new_instancemethod(_snap.TFlt___iadd__,None,TFlt)
TFlt.__isub__ = new_instancemethod(_snap.TFlt___isub__,None,TFlt)
TFlt.__imul__ = new_instancemethod(_snap.TFlt___imul__,None,TFlt)
TFlt.__idiv__ = new_instancemethod(_snap.TFlt___idiv__,None,TFlt)
TFlt.GetMemUsed = new_instancemethod(_snap.TFlt_GetMemUsed,None,TFlt)
TFlt.GetPrimHashCd = new_instancemethod(_snap.TFlt_GetPrimHashCd,None,TFlt)
TFlt.GetSecHashCd = new_instancemethod(_snap.TFlt_GetSecHashCd,None,TFlt)
TFlt.IsNum = new_instancemethod(_snap.TFlt_IsNum,None,TFlt)
TFlt.IsNan = new_instancemethod(_snap.TFlt_IsNan,None,TFlt)
TFlt_swigregister = _snap.TFlt_swigregister
TFlt_swigregister(TFlt)
TFlt.Mn = _snap.cvar.TFlt_Mn
TFlt.Mx = _snap.cvar.TFlt_Mx
TFlt.NInf = _snap.cvar.TFlt_NInf
TFlt.PInf = _snap.cvar.TFlt_PInf
TFlt.Eps = _snap.cvar.TFlt_Eps
TFlt.EpsHalf = _snap.cvar.TFlt_EpsHalf

def TFlt_Abs(*args):
  return _snap.TFlt_Abs(*args)
TFlt_Abs = _snap.TFlt_Abs

def TFlt_Sign(*args):
  return _snap.TFlt_Sign(*args)
TFlt_Sign = _snap.TFlt_Sign

def TFlt_Round(*args):
  return _snap.TFlt_Round(*args)
TFlt_Round = _snap.TFlt_Round

def TFlt_GetRnd():
  return _snap.TFlt_GetRnd()
TFlt_GetRnd = _snap.TFlt_GetRnd

def TFlt_Eq6(*args):
  return _snap.TFlt_Eq6(*args)
TFlt_Eq6 = _snap.TFlt_Eq6

def TFlt_GetMn(*args):
  return _snap.TFlt_GetMn(*args)
TFlt_GetMn = _snap.TFlt_GetMn

def TFlt_GetMx(*args):
  return _snap.TFlt_GetMx(*args)
TFlt_GetMx = _snap.TFlt_GetMx

def TFlt_GetInRng(*args):
  return _snap.TFlt_GetInRng(*args)
TFlt_GetInRng = _snap.TFlt_GetInRng

def TFlt_GetPrcStr(*args):
  return _snap.TFlt_GetPrcStr(*args)
TFlt_GetPrcStr = _snap.TFlt_GetPrcStr

def TFlt_GetKiloStr(*args):
  return _snap.TFlt_GetKiloStr(*args)
TFlt_GetKiloStr = _snap.TFlt_GetKiloStr

def TFlt_GetMegaStr(*args):
  return _snap.TFlt_GetMegaStr(*args)
TFlt_GetMegaStr = _snap.TFlt_GetMegaStr

def TFlt_GetGigaStr(*args):
  return _snap.TFlt_GetGigaStr(*args)
TFlt_GetGigaStr = _snap.TFlt_GetGigaStr

class TAscFlt(TFlt):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TAscFlt_swiginit(self,_snap.new_TAscFlt(*args))
    __swig_destroy__ = _snap.delete_TAscFlt
TAscFlt.Save = new_instancemethod(_snap.TAscFlt_Save,None,TAscFlt)
TAscFlt_swigregister = _snap.TAscFlt_swigregister
TAscFlt_swigregister(TAscFlt)

class TSFlt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TSFlt_Val_get, _snap.TSFlt_Val_set)
    def __init__(self, *args): 
        _snap.TSFlt_swiginit(self,_snap.new_TSFlt(*args))
    __swig_destroy__ = _snap.delete_TSFlt
TSFlt.Save = new_instancemethod(_snap.TSFlt_Save,None,TSFlt)
TSFlt.LoadXml = new_instancemethod(_snap.TSFlt_LoadXml,None,TSFlt)
TSFlt.SaveXml = new_instancemethod(_snap.TSFlt_SaveXml,None,TSFlt)
TSFlt.__eq__ = new_instancemethod(_snap.TSFlt___eq__,None,TSFlt)
TSFlt.__ne__ = new_instancemethod(_snap.TSFlt___ne__,None,TSFlt)
TSFlt.__lt__ = new_instancemethod(_snap.TSFlt___lt__,None,TSFlt)
TSFlt.__call__ = new_instancemethod(_snap.TSFlt___call__,None,TSFlt)
TSFlt.__iadd__ = new_instancemethod(_snap.TSFlt___iadd__,None,TSFlt)
TSFlt.__isub__ = new_instancemethod(_snap.TSFlt___isub__,None,TSFlt)
TSFlt.__imul__ = new_instancemethod(_snap.TSFlt___imul__,None,TSFlt)
TSFlt.__idiv__ = new_instancemethod(_snap.TSFlt___idiv__,None,TSFlt)
TSFlt.GetMemUsed = new_instancemethod(_snap.TSFlt_GetMemUsed,None,TSFlt)
TSFlt.GetPrimHashCd = new_instancemethod(_snap.TSFlt_GetPrimHashCd,None,TSFlt)
TSFlt.GetSecHashCd = new_instancemethod(_snap.TSFlt_GetSecHashCd,None,TSFlt)
TSFlt_swigregister = _snap.TSFlt_swigregister
TSFlt_swigregister(TSFlt)
TSFlt.Mn = _snap.cvar.TSFlt_Mn
TSFlt.Mx = _snap.cvar.TSFlt_Mx

class TLFlt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Val = _swig_property(_snap.TLFlt_Val_get, _snap.TLFlt_Val_set)
    def __init__(self, *args): 
        _snap.TLFlt_swiginit(self,_snap.new_TLFlt(*args))
    __swig_destroy__ = _snap.delete_TLFlt
TLFlt.Save = new_instancemethod(_snap.TLFlt_Save,None,TLFlt)
TLFlt.LoadXml = new_instancemethod(_snap.TLFlt_LoadXml,None,TLFlt)
TLFlt.SaveXml = new_instancemethod(_snap.TLFlt_SaveXml,None,TLFlt)
TLFlt.__eq__ = new_instancemethod(_snap.TLFlt___eq__,None,TLFlt)
TLFlt.__ne__ = new_instancemethod(_snap.TLFlt___ne__,None,TLFlt)
TLFlt.__lt__ = new_instancemethod(_snap.TLFlt___lt__,None,TLFlt)
TLFlt.__call__ = new_instancemethod(_snap.TLFlt___call__,None,TLFlt)
TLFlt.__iadd__ = new_instancemethod(_snap.TLFlt___iadd__,None,TLFlt)
TLFlt.__isub__ = new_instancemethod(_snap.TLFlt___isub__,None,TLFlt)
TLFlt.GetMemUsed = new_instancemethod(_snap.TLFlt_GetMemUsed,None,TLFlt)
TLFlt.GetPrimHashCd = new_instancemethod(_snap.TLFlt_GetPrimHashCd,None,TLFlt)
TLFlt.GetSecHashCd = new_instancemethod(_snap.TLFlt_GetSecHashCd,None,TLFlt)
TLFlt_swigregister = _snap.TLFlt_swigregister
TLFlt_swigregister(TLFlt)
TLFlt.Mn = _snap.cvar.TLFlt_Mn
TLFlt.Mx = _snap.cvar.TLFlt_Mx

class TFltRect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    MnX = _swig_property(_snap.TFltRect_MnX_get, _snap.TFltRect_MnX_set)
    MnY = _swig_property(_snap.TFltRect_MnY_get, _snap.TFltRect_MnY_set)
    MxX = _swig_property(_snap.TFltRect_MxX_get, _snap.TFltRect_MxX_set)
    MxY = _swig_property(_snap.TFltRect_MxY_get, _snap.TFltRect_MxY_set)
    def __init__(self, *args): 
        _snap.TFltRect_swiginit(self,_snap.new_TFltRect(*args))
    Intersection = staticmethod(_snap.TFltRect_Intersection)
    __swig_destroy__ = _snap.delete_TFltRect
TFltRect.Save = new_instancemethod(_snap.TFltRect_Save,None,TFltRect)
TFltRect.LoadXml = new_instancemethod(_snap.TFltRect_LoadXml,None,TFltRect)
TFltRect.SaveXml = new_instancemethod(_snap.TFltRect_SaveXml,None,TFltRect)
TFltRect.GetMnX = new_instancemethod(_snap.TFltRect_GetMnX,None,TFltRect)
TFltRect.GetMnY = new_instancemethod(_snap.TFltRect_GetMnY,None,TFltRect)
TFltRect.GetMxX = new_instancemethod(_snap.TFltRect_GetMxX,None,TFltRect)
TFltRect.GetMxY = new_instancemethod(_snap.TFltRect_GetMxY,None,TFltRect)
TFltRect.GetXLen = new_instancemethod(_snap.TFltRect_GetXLen,None,TFltRect)
TFltRect.GetYLen = new_instancemethod(_snap.TFltRect_GetYLen,None,TFltRect)
TFltRect.GetXCenter = new_instancemethod(_snap.TFltRect_GetXCenter,None,TFltRect)
TFltRect.GetYCenter = new_instancemethod(_snap.TFltRect_GetYCenter,None,TFltRect)
TFltRect.IsXYIn = new_instancemethod(_snap.TFltRect_IsXYIn,None,TFltRect)
TFltRect_swigregister = _snap.TFltRect_swigregister
TFltRect_swigregister(TFltRect)

def TFltRect_Intersection(*args):
  return _snap.TFltRect_Intersection(*args)
TFltRect_Intersection = _snap.TFltRect_Intersection

class TCs(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TCs_swiginit(self,_snap.new_TCs(*args))
    GetCsFromBf = staticmethod(_snap.TCs_GetCsFromBf)
    __swig_destroy__ = _snap.delete_TCs
TCs.__eq__ = new_instancemethod(_snap.TCs___eq__,None,TCs)
TCs.__iadd__ = new_instancemethod(_snap.TCs___iadd__,None,TCs)
TCs.Get = new_instancemethod(_snap.TCs_Get,None,TCs)
TCs_swigregister = _snap.TCs_swigregister
TCs_swigregister(TCs)

def TCs_GetCsFromBf(*args):
  return _snap.TCs_GetCsFromBf(*args)
TCs_GetCsFromBf = _snap.TCs_GetCsFromBf

class TSOutMnp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _snap.delete_TSOutMnp
TSOutMnp.__call__ = new_instancemethod(_snap.TSOutMnp___call__,None,TSOutMnp)
TSOutMnp_swigregister = _snap.TSOutMnp_swigregister
TSOutMnp_swigregister(TSOutMnp)

class TSBase(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TSBase_swiginit(self,_snap.new_TSBase(*args))
    __swig_destroy__ = _snap.delete_TSBase
TSBase.GetSNm = new_instancemethod(_snap.TSBase_GetSNm,None,TSBase)
TSBase_swigregister = _snap.TSBase_swigregister
TSBase_swigregister(TSBase)

class TSIn(TSBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _snap.delete_TSIn
TSIn.Eof = new_instancemethod(_snap.TSIn_Eof,None,TSIn)
TSIn.Len = new_instancemethod(_snap.TSIn_Len,None,TSIn)
TSIn.GetCh = new_instancemethod(_snap.TSIn_GetCh,None,TSIn)
TSIn.PeekCh = new_instancemethod(_snap.TSIn_PeekCh,None,TSIn)
TSIn.GetBf = new_instancemethod(_snap.TSIn_GetBf,None,TSIn)
TSIn.GetNextLnBf = new_instancemethod(_snap.TSIn_GetNextLnBf,None,TSIn)
TSIn.Reset = new_instancemethod(_snap.TSIn_Reset,None,TSIn)
TSIn.IsFastMode = new_instancemethod(_snap.TSIn_IsFastMode,None,TSIn)
TSIn.SetFastMode = new_instancemethod(_snap.TSIn_SetFastMode,None,TSIn)
TSIn.LoadCs = new_instancemethod(_snap.TSIn_LoadCs,None,TSIn)
TSIn.LoadBf = new_instancemethod(_snap.TSIn_LoadBf,None,TSIn)
TSIn.LoadNewBf = new_instancemethod(_snap.TSIn_LoadNewBf,None,TSIn)
TSIn.Load = new_instancemethod(_snap.TSIn_Load,None,TSIn)
TSIn.__rshift__ = new_instancemethod(_snap.TSIn___rshift__,None,TSIn)
TSIn.GetNextLn = new_instancemethod(_snap.TSIn_GetNextLn,None,TSIn)
TSIn_swigregister = _snap.TSIn_swigregister
TSIn_swigregister(TSIn)
TSIn.StdIn = _snap.cvar.TSIn_StdIn

class TSOut(TSBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _snap.delete_TSOut
TSOut.EnableLnTrunc = new_instancemethod(_snap.TSOut_EnableLnTrunc,None,TSOut)
TSOut.DisableLnTrunc = new_instancemethod(_snap.TSOut_DisableLnTrunc,None,TSOut)
TSOut.PutBf = new_instancemethod(_snap.TSOut_PutBf,None,TSOut)
TSOut.Flush = new_instancemethod(_snap.TSOut_Flush,None,TSOut)
TSOut.GetFileId = new_instancemethod(_snap.TSOut_GetFileId,None,TSOut)
TSOut.PutMem = new_instancemethod(_snap.TSOut_PutMem,None,TSOut)
TSOut.PutCh = new_instancemethod(_snap.TSOut_PutCh,None,TSOut)
TSOut.PutBool = new_instancemethod(_snap.TSOut_PutBool,None,TSOut)
TSOut.PutInt = new_instancemethod(_snap.TSOut_PutInt,None,TSOut)
TSOut.PutUInt = new_instancemethod(_snap.TSOut_PutUInt,None,TSOut)
TSOut.PutFlt = new_instancemethod(_snap.TSOut_PutFlt,None,TSOut)
TSOut.PutStr = new_instancemethod(_snap.TSOut_PutStr,None,TSOut)
TSOut.PutStrLn = new_instancemethod(_snap.TSOut_PutStrLn,None,TSOut)
TSOut.PutStrFmt = new_instancemethod(_snap.TSOut_PutStrFmt,None,TSOut)
TSOut.PutStrFmtLn = new_instancemethod(_snap.TSOut_PutStrFmtLn,None,TSOut)
TSOut.PutIndent = new_instancemethod(_snap.TSOut_PutIndent,None,TSOut)
TSOut.PutLn = new_instancemethod(_snap.TSOut_PutLn,None,TSOut)
TSOut.PutDosLn = new_instancemethod(_snap.TSOut_PutDosLn,None,TSOut)
TSOut.PutSep = new_instancemethod(_snap.TSOut_PutSep,None,TSOut)
TSOut.PutSepLn = new_instancemethod(_snap.TSOut_PutSepLn,None,TSOut)
TSOut.SaveCs = new_instancemethod(_snap.TSOut_SaveCs,None,TSOut)
TSOut.SaveBf = new_instancemethod(_snap.TSOut_SaveBf,None,TSOut)
TSOut.Save = new_instancemethod(_snap.TSOut_Save,None,TSOut)
TSOut.__lshift__ = new_instancemethod(_snap.TSOut___lshift__,None,TSOut)
TSOut_swigregister = _snap.TSOut_swigregister
TSOut_swigregister(TSOut)
TSOut.StdOut = _snap.cvar.TSOut_StdOut

class TSInOut(TSIn,TSOut):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _snap.delete_TSInOut
TSInOut.SetPos = new_instancemethod(_snap.TSInOut_SetPos,None,TSInOut)
TSInOut.MovePos = new_instancemethod(_snap.TSInOut_MovePos,None,TSInOut)
TSInOut.GetPos = new_instancemethod(_snap.TSInOut_GetPos,None,TSInOut)
TSInOut.GetSize = new_instancemethod(_snap.TSInOut_GetSize,None,TSInOut)
TSInOut.Clr = new_instancemethod(_snap.TSInOut_Clr,None,TSInOut)
TSInOut_swigregister = _snap.TSInOut_swigregister
TSInOut_swigregister(TSInOut)

class TStdIn(TSIn):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        _snap.TStdIn_swiginit(self,_snap.new_TStdIn())
    New = staticmethod(_snap.TStdIn_New)
    __swig_destroy__ = _snap.delete_TStdIn
TStdIn_swigregister = _snap.TStdIn_swigregister
TStdIn_swigregister(TStdIn)

def TStdIn_New():
  return _snap.TStdIn_New()
TStdIn_New = _snap.TStdIn_New

class TStdOut(TSOut):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        _snap.TStdOut_swiginit(self,_snap.new_TStdOut())
    New = staticmethod(_snap.TStdOut_New)
    __swig_destroy__ = _snap.delete_TStdOut
TStdOut_swigregister = _snap.TStdOut_swigregister
TStdOut_swigregister(TStdOut)

def TStdOut_New():
  return _snap.TStdOut_New()
TStdOut_New = _snap.TStdOut_New

class TFIn(TSIn):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TFIn_swiginit(self,_snap.new_TFIn(*args))
    New = staticmethod(_snap.TFIn_New)
    __swig_destroy__ = _snap.delete_TFIn
TFIn_swigregister = _snap.TFIn_swigregister
TFIn_swigregister(TFIn)

def TFIn_New(*args):
  return _snap.TFIn_New(*args)
TFIn_New = _snap.TFIn_New

class TFOut(TSOut):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TFOut_swiginit(self,_snap.new_TFOut(*args))
    New = staticmethod(_snap.TFOut_New)
    __swig_destroy__ = _snap.delete_TFOut
TFOut_swigregister = _snap.TFOut_swigregister
TFOut_swigregister(TFOut)

def TFOut_New(*args):
  return _snap.TFOut_New(*args)
TFOut_New = _snap.TFOut_New

faUndef = _snap.faUndef
faCreate = _snap.faCreate
faUpdate = _snap.faUpdate
faAppend = _snap.faAppend
faRdOnly = _snap.faRdOnly
faRestore = _snap.faRestore
class TMIn(TSIn):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TMIn_swiginit(self,_snap.new_TMIn(*args))
    __swig_destroy__ = _snap.delete_TMIn
TMIn.GetBfAddr = new_instancemethod(_snap.TMIn_GetBfAddr,None,TMIn)
TMIn_swigregister = _snap.TMIn_swigregister
TMIn_swigregister(TMIn)

class TMOut(TSOut):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    New = staticmethod(_snap.TMOut_New)
    def __init__(self, *args): 
        _snap.TMOut_swiginit(self,_snap.new_TMOut(*args))
    __swig_destroy__ = _snap.delete_TMOut
TMOut.Len = new_instancemethod(_snap.TMOut_Len,None,TMOut)
TMOut.Clr = new_instancemethod(_snap.TMOut_Clr,None,TMOut)
TMOut.GetCh = new_instancemethod(_snap.TMOut_GetCh,None,TMOut)
TMOut.GetAsStr = new_instancemethod(_snap.TMOut_GetAsStr,None,TMOut)
TMOut.CutBf = new_instancemethod(_snap.TMOut_CutBf,None,TMOut)
TMOut.GetSIn = new_instancemethod(_snap.TMOut_GetSIn,None,TMOut)
TMOut.GetBfAddr = new_instancemethod(_snap.TMOut_GetBfAddr,None,TMOut)
TMOut.IsCrLfLn = new_instancemethod(_snap.TMOut_IsCrLfLn,None,TMOut)
TMOut.GetCrLfLn = new_instancemethod(_snap.TMOut_GetCrLfLn,None,TMOut)
TMOut.IsEolnLn = new_instancemethod(_snap.TMOut_IsEolnLn,None,TMOut)
TMOut.GetEolnLn = new_instancemethod(_snap.TMOut_GetEolnLn,None,TMOut)
TMOut.MkEolnLn = new_instancemethod(_snap.TMOut_MkEolnLn,None,TMOut)
TMOut_swigregister = _snap.TMOut_swigregister
TMOut_swigregister(TMOut)

def TMOut_New(MxBfL=1024):
  return _snap.TMOut_New(MxBfL)
TMOut_New = _snap.TMOut_New

class TChRet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TChRet_swiginit(self,_snap.new_TChRet(*args))
    __swig_destroy__ = _snap.delete_TChRet
TChRet.Eof = new_instancemethod(_snap.TChRet_Eof,None,TChRet)
TChRet.GetCh = new_instancemethod(_snap.TChRet_GetCh,None,TChRet)
TChRet.__call__ = new_instancemethod(_snap.TChRet___call__,None,TChRet)
TChRet_swigregister = _snap.TChRet_swigregister
TChRet_swigregister(TChRet)

class TLnRet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TLnRet_swiginit(self,_snap.new_TLnRet(*args))
    __swig_destroy__ = _snap.delete_TLnRet
TLnRet.NextLn = new_instancemethod(_snap.TLnRet_NextLn,None,TLnRet)
TLnRet_swigregister = _snap.TLnRet_swigregister
TLnRet_swigregister(TLnRet)

class TFile(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Exists = staticmethod(_snap.TFile_Exists)
    Copy = staticmethod(_snap.TFile_Copy)
    Del = staticmethod(_snap.TFile_Del)
    DelWc = staticmethod(_snap.TFile_DelWc)
    Rename = staticmethod(_snap.TFile_Rename)
    GetUniqueFNm = staticmethod(_snap.TFile_GetUniqueFNm)
    GetSize = staticmethod(_snap.TFile_GetSize)
    GetCreateTm = staticmethod(_snap.TFile_GetCreateTm)
    GetLastWriteTm = staticmethod(_snap.TFile_GetLastWriteTm)
    def __init__(self): 
        _snap.TFile_swiginit(self,_snap.new_TFile())
    __swig_destroy__ = _snap.delete_TFile
TFile_swigregister = _snap.TFile_swigregister
TFile_swigregister(TFile)
TFile.TxtFExt = _snap.cvar.TFile_TxtFExt
TFile.HtmlFExt = _snap.cvar.TFile_HtmlFExt
TFile.HtmFExt = _snap.cvar.TFile_HtmFExt
TFile.GifFExt = _snap.cvar.TFile_GifFExt
TFile.JarFExt = _snap.cvar.TFile_JarFExt

def TFile_Exists(*args):
  return _snap.TFile_Exists(*args)
TFile_Exists = _snap.TFile_Exists

def TFile_Copy(*args):
  return _snap.TFile_Copy(*args)
TFile_Copy = _snap.TFile_Copy

def TFile_Del(*args):
  return _snap.TFile_Del(*args)
TFile_Del = _snap.TFile_Del

def TFile_DelWc(*args):
  return _snap.TFile_DelWc(*args)
TFile_DelWc = _snap.TFile_DelWc

def TFile_Rename(*args):
  return _snap.TFile_Rename(*args)
TFile_Rename = _snap.TFile_Rename

def TFile_GetUniqueFNm(*args):
  return _snap.TFile_GetUniqueFNm(*args)
TFile_GetUniqueFNm = _snap.TFile_GetUniqueFNm

def TFile_GetSize(*args):
  return _snap.TFile_GetSize(*args)
TFile_GetSize = _snap.TFile_GetSize

def TFile_GetCreateTm(*args):
  return _snap.TFile_GetCreateTm(*args)
TFile_GetCreateTm = _snap.TFile_GetCreateTm

def TFile_GetLastWriteTm(*args):
  return _snap.TFile_GetLastWriteTm(*args)
TFile_GetLastWriteTm = _snap.TFile_GetLastWriteTm

class TUNGraph(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TUNGraph_swiginit(self,_snap.new_TUNGraph(*args))
    New = staticmethod(_snap.TUNGraph_New)
    Load = staticmethod(_snap.TUNGraph_Load)
    GetSmallGraph = staticmethod(_snap.TUNGraph_GetSmallGraph)
    __swig_destroy__ = _snap.delete_TUNGraph
TUNGraph.Save = new_instancemethod(_snap.TUNGraph_Save,None,TUNGraph)
TUNGraph.HasFlag = new_instancemethod(_snap.TUNGraph_HasFlag,None,TUNGraph)
TUNGraph.GetNodes = new_instancemethod(_snap.TUNGraph_GetNodes,None,TUNGraph)
TUNGraph.AddNode = new_instancemethod(_snap.TUNGraph_AddNode,None,TUNGraph)
TUNGraph.DelNode = new_instancemethod(_snap.TUNGraph_DelNode,None,TUNGraph)
TUNGraph.IsNode = new_instancemethod(_snap.TUNGraph_IsNode,None,TUNGraph)
TUNGraph.GetNI = new_instancemethod(_snap.TUNGraph_GetNI,None,TUNGraph)
TUNGraph.GetMxNId = new_instancemethod(_snap.TUNGraph_GetMxNId,None,TUNGraph)
TUNGraph.GetEdges = new_instancemethod(_snap.TUNGraph_GetEdges,None,TUNGraph)
TUNGraph.AddEdge = new_instancemethod(_snap.TUNGraph_AddEdge,None,TUNGraph)
TUNGraph.DelEdge = new_instancemethod(_snap.TUNGraph_DelEdge,None,TUNGraph)
TUNGraph.IsEdge = new_instancemethod(_snap.TUNGraph_IsEdge,None,TUNGraph)
TUNGraph.GetEI = new_instancemethod(_snap.TUNGraph_GetEI,None,TUNGraph)
TUNGraph.GetRndNId = new_instancemethod(_snap.TUNGraph_GetRndNId,None,TUNGraph)
TUNGraph.GetRndNI = new_instancemethod(_snap.TUNGraph_GetRndNI,None,TUNGraph)
TUNGraph.GetNIdV = new_instancemethod(_snap.TUNGraph_GetNIdV,None,TUNGraph)
TUNGraph.Empty = new_instancemethod(_snap.TUNGraph_Empty,None,TUNGraph)
TUNGraph.Clr = new_instancemethod(_snap.TUNGraph_Clr,None,TUNGraph)
TUNGraph.Reserve = new_instancemethod(_snap.TUNGraph_Reserve,None,TUNGraph)
TUNGraph.ReserveNIdDeg = new_instancemethod(_snap.TUNGraph_ReserveNIdDeg,None,TUNGraph)
TUNGraph.Defrag = new_instancemethod(_snap.TUNGraph_Defrag,None,TUNGraph)
TUNGraph.IsOk = new_instancemethod(_snap.TUNGraph_IsOk,None,TUNGraph)
TUNGraph.Dump = new_instancemethod(_snap.TUNGraph_Dump,None,TUNGraph)
TUNGraph.BegNI = new_instancemethod(_snap.TUNGraph_BegNI,None,TUNGraph)
TUNGraph.EndNI = new_instancemethod(_snap.TUNGraph_EndNI,None,TUNGraph)
TUNGraph.BegEI = new_instancemethod(_snap.TUNGraph_BegEI,None,TUNGraph)
TUNGraph.EndEI = new_instancemethod(_snap.TUNGraph_EndEI,None,TUNGraph)
TUNGraph_swigregister = _snap.TUNGraph_swigregister
TUNGraph_swigregister(TUNGraph)

def TUNGraph_New(*args):
  return _snap.TUNGraph_New(*args)
TUNGraph_New = _snap.TUNGraph_New

def TUNGraph_Load(*args):
  return _snap.TUNGraph_Load(*args)
TUNGraph_Load = _snap.TUNGraph_Load

def TUNGraph_GetSmallGraph():
  return _snap.TUNGraph_GetSmallGraph()
TUNGraph_GetSmallGraph = _snap.TUNGraph_GetSmallGraph

class TNGraph(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TNGraph_swiginit(self,_snap.new_TNGraph(*args))
    New = staticmethod(_snap.TNGraph_New)
    Load = staticmethod(_snap.TNGraph_Load)
    GetSmallGraph = staticmethod(_snap.TNGraph_GetSmallGraph)
    __swig_destroy__ = _snap.delete_TNGraph
TNGraph.Save = new_instancemethod(_snap.TNGraph_Save,None,TNGraph)
TNGraph.HasFlag = new_instancemethod(_snap.TNGraph_HasFlag,None,TNGraph)
TNGraph.GetNodes = new_instancemethod(_snap.TNGraph_GetNodes,None,TNGraph)
TNGraph.AddNode = new_instancemethod(_snap.TNGraph_AddNode,None,TNGraph)
TNGraph.DelNode = new_instancemethod(_snap.TNGraph_DelNode,None,TNGraph)
TNGraph.IsNode = new_instancemethod(_snap.TNGraph_IsNode,None,TNGraph)
TNGraph.GetNI = new_instancemethod(_snap.TNGraph_GetNI,None,TNGraph)
TNGraph.GetMxNId = new_instancemethod(_snap.TNGraph_GetMxNId,None,TNGraph)
TNGraph.GetEdges = new_instancemethod(_snap.TNGraph_GetEdges,None,TNGraph)
TNGraph.AddEdge = new_instancemethod(_snap.TNGraph_AddEdge,None,TNGraph)
TNGraph.DelEdge = new_instancemethod(_snap.TNGraph_DelEdge,None,TNGraph)
TNGraph.IsEdge = new_instancemethod(_snap.TNGraph_IsEdge,None,TNGraph)
TNGraph.GetEI = new_instancemethod(_snap.TNGraph_GetEI,None,TNGraph)
TNGraph.GetRndNId = new_instancemethod(_snap.TNGraph_GetRndNId,None,TNGraph)
TNGraph.GetRndNI = new_instancemethod(_snap.TNGraph_GetRndNI,None,TNGraph)
TNGraph.GetNIdV = new_instancemethod(_snap.TNGraph_GetNIdV,None,TNGraph)
TNGraph.Empty = new_instancemethod(_snap.TNGraph_Empty,None,TNGraph)
TNGraph.Clr = new_instancemethod(_snap.TNGraph_Clr,None,TNGraph)
TNGraph.Reserve = new_instancemethod(_snap.TNGraph_Reserve,None,TNGraph)
TNGraph.ReserveNIdInDeg = new_instancemethod(_snap.TNGraph_ReserveNIdInDeg,None,TNGraph)
TNGraph.ReserveNIdOutDeg = new_instancemethod(_snap.TNGraph_ReserveNIdOutDeg,None,TNGraph)
TNGraph.Defrag = new_instancemethod(_snap.TNGraph_Defrag,None,TNGraph)
TNGraph.IsOk = new_instancemethod(_snap.TNGraph_IsOk,None,TNGraph)
TNGraph.Dump = new_instancemethod(_snap.TNGraph_Dump,None,TNGraph)
TNGraph.BegNI = new_instancemethod(_snap.TNGraph_BegNI,None,TNGraph)
TNGraph.EndNI = new_instancemethod(_snap.TNGraph_EndNI,None,TNGraph)
TNGraph.BegEI = new_instancemethod(_snap.TNGraph_BegEI,None,TNGraph)
TNGraph.EndEI = new_instancemethod(_snap.TNGraph_EndEI,None,TNGraph)
TNGraph_swigregister = _snap.TNGraph_swigregister
TNGraph_swigregister(TNGraph)

def TNGraph_New(*args):
  return _snap.TNGraph_New(*args)
TNGraph_New = _snap.TNGraph_New

def TNGraph_Load(*args):
  return _snap.TNGraph_Load(*args)
TNGraph_Load = _snap.TNGraph_Load

def TNGraph_GetSmallGraph():
  return _snap.TNGraph_GetSmallGraph()
TNGraph_GetSmallGraph = _snap.TNGraph_GetSmallGraph

class TNEGraph(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TNEGraph_swiginit(self,_snap.new_TNEGraph(*args))
    New = staticmethod(_snap.TNEGraph_New)
    Load = staticmethod(_snap.TNEGraph_Load)
    __swig_destroy__ = _snap.delete_TNEGraph
TNEGraph.Save = new_instancemethod(_snap.TNEGraph_Save,None,TNEGraph)
TNEGraph.HasFlag = new_instancemethod(_snap.TNEGraph_HasFlag,None,TNEGraph)
TNEGraph.GetNodes = new_instancemethod(_snap.TNEGraph_GetNodes,None,TNEGraph)
TNEGraph.AddNode = new_instancemethod(_snap.TNEGraph_AddNode,None,TNEGraph)
TNEGraph.DelNode = new_instancemethod(_snap.TNEGraph_DelNode,None,TNEGraph)
TNEGraph.IsNode = new_instancemethod(_snap.TNEGraph_IsNode,None,TNEGraph)
TNEGraph.BegNI = new_instancemethod(_snap.TNEGraph_BegNI,None,TNEGraph)
TNEGraph.EndNI = new_instancemethod(_snap.TNEGraph_EndNI,None,TNEGraph)
TNEGraph.GetNI = new_instancemethod(_snap.TNEGraph_GetNI,None,TNEGraph)
TNEGraph.GetMxNId = new_instancemethod(_snap.TNEGraph_GetMxNId,None,TNEGraph)
TNEGraph.GetEdges = new_instancemethod(_snap.TNEGraph_GetEdges,None,TNEGraph)
TNEGraph.AddEdge = new_instancemethod(_snap.TNEGraph_AddEdge,None,TNEGraph)
TNEGraph.DelEdge = new_instancemethod(_snap.TNEGraph_DelEdge,None,TNEGraph)
TNEGraph.IsEdge = new_instancemethod(_snap.TNEGraph_IsEdge,None,TNEGraph)
TNEGraph.GetEId = new_instancemethod(_snap.TNEGraph_GetEId,None,TNEGraph)
TNEGraph.BegEI = new_instancemethod(_snap.TNEGraph_BegEI,None,TNEGraph)
TNEGraph.EndEI = new_instancemethod(_snap.TNEGraph_EndEI,None,TNEGraph)
TNEGraph.GetEI = new_instancemethod(_snap.TNEGraph_GetEI,None,TNEGraph)
TNEGraph.GetRndNId = new_instancemethod(_snap.TNEGraph_GetRndNId,None,TNEGraph)
TNEGraph.GetRndNI = new_instancemethod(_snap.TNEGraph_GetRndNI,None,TNEGraph)
TNEGraph.GetRndEId = new_instancemethod(_snap.TNEGraph_GetRndEId,None,TNEGraph)
TNEGraph.GetRndEI = new_instancemethod(_snap.TNEGraph_GetRndEI,None,TNEGraph)
TNEGraph.GetNIdV = new_instancemethod(_snap.TNEGraph_GetNIdV,None,TNEGraph)
TNEGraph.GetEIdV = new_instancemethod(_snap.TNEGraph_GetEIdV,None,TNEGraph)
TNEGraph.Empty = new_instancemethod(_snap.TNEGraph_Empty,None,TNEGraph)
TNEGraph.Clr = new_instancemethod(_snap.TNEGraph_Clr,None,TNEGraph)
TNEGraph.Reserve = new_instancemethod(_snap.TNEGraph_Reserve,None,TNEGraph)
TNEGraph.Defrag = new_instancemethod(_snap.TNEGraph_Defrag,None,TNEGraph)
TNEGraph.IsOk = new_instancemethod(_snap.TNEGraph_IsOk,None,TNEGraph)
TNEGraph.Dump = new_instancemethod(_snap.TNEGraph_Dump,None,TNEGraph)
TNEGraph_swigregister = _snap.TNEGraph_swigregister
TNEGraph_swigregister(TNEGraph)

def TNEGraph_New(*args):
  return _snap.TNEGraph_New(*args)
TNEGraph_New = _snap.TNEGraph_New

def TNEGraph_Load(*args):
  return _snap.TNEGraph_Load(*args)
TNEGraph_Load = _snap.TNEGraph_Load

class TBPGraph(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    bgsUndef = _snap.TBPGraph_bgsUndef
    bgsLeft = _snap.TBPGraph_bgsLeft
    bgsRight = _snap.TBPGraph_bgsRight
    bgsBoth = _snap.TBPGraph_bgsBoth
    def __init__(self, *args): 
        _snap.TBPGraph_swiginit(self,_snap.new_TBPGraph(*args))
    New = staticmethod(_snap.TBPGraph_New)
    Load = staticmethod(_snap.TBPGraph_Load)
    GetSmallGraph = staticmethod(_snap.TBPGraph_GetSmallGraph)
    __swig_destroy__ = _snap.delete_TBPGraph
TBPGraph.Save = new_instancemethod(_snap.TBPGraph_Save,None,TBPGraph)
TBPGraph.GetNodes = new_instancemethod(_snap.TBPGraph_GetNodes,None,TBPGraph)
TBPGraph.GetLNodes = new_instancemethod(_snap.TBPGraph_GetLNodes,None,TBPGraph)
TBPGraph.GetRNodes = new_instancemethod(_snap.TBPGraph_GetRNodes,None,TBPGraph)
TBPGraph.AddNode = new_instancemethod(_snap.TBPGraph_AddNode,None,TBPGraph)
TBPGraph.DelNode = new_instancemethod(_snap.TBPGraph_DelNode,None,TBPGraph)
TBPGraph.IsNode = new_instancemethod(_snap.TBPGraph_IsNode,None,TBPGraph)
TBPGraph.IsLNode = new_instancemethod(_snap.TBPGraph_IsLNode,None,TBPGraph)
TBPGraph.IsRNode = new_instancemethod(_snap.TBPGraph_IsRNode,None,TBPGraph)
TBPGraph.GetMxNId = new_instancemethod(_snap.TBPGraph_GetMxNId,None,TBPGraph)
TBPGraph.BegNI = new_instancemethod(_snap.TBPGraph_BegNI,None,TBPGraph)
TBPGraph.EndNI = new_instancemethod(_snap.TBPGraph_EndNI,None,TBPGraph)
TBPGraph.GetNI = new_instancemethod(_snap.TBPGraph_GetNI,None,TBPGraph)
TBPGraph.BegLNI = new_instancemethod(_snap.TBPGraph_BegLNI,None,TBPGraph)
TBPGraph.EndLNI = new_instancemethod(_snap.TBPGraph_EndLNI,None,TBPGraph)
TBPGraph.BegRNI = new_instancemethod(_snap.TBPGraph_BegRNI,None,TBPGraph)
TBPGraph.EndRNI = new_instancemethod(_snap.TBPGraph_EndRNI,None,TBPGraph)
TBPGraph.GetEdges = new_instancemethod(_snap.TBPGraph_GetEdges,None,TBPGraph)
TBPGraph.AddEdge = new_instancemethod(_snap.TBPGraph_AddEdge,None,TBPGraph)
TBPGraph.DelEdge = new_instancemethod(_snap.TBPGraph_DelEdge,None,TBPGraph)
TBPGraph.IsEdge = new_instancemethod(_snap.TBPGraph_IsEdge,None,TBPGraph)
TBPGraph.BegEI = new_instancemethod(_snap.TBPGraph_BegEI,None,TBPGraph)
TBPGraph.EndEI = new_instancemethod(_snap.TBPGraph_EndEI,None,TBPGraph)
TBPGraph.GetEI = new_instancemethod(_snap.TBPGraph_GetEI,None,TBPGraph)
TBPGraph.GetRndNId = new_instancemethod(_snap.TBPGraph_GetRndNId,None,TBPGraph)
TBPGraph.GetRndLNId = new_instancemethod(_snap.TBPGraph_GetRndLNId,None,TBPGraph)
TBPGraph.GetRndRNId = new_instancemethod(_snap.TBPGraph_GetRndRNId,None,TBPGraph)
TBPGraph.GetRndNI = new_instancemethod(_snap.TBPGraph_GetRndNI,None,TBPGraph)
TBPGraph.GetNIdV = new_instancemethod(_snap.TBPGraph_GetNIdV,None,TBPGraph)
TBPGraph.GetLNIdV = new_instancemethod(_snap.TBPGraph_GetLNIdV,None,TBPGraph)
TBPGraph.GetRNIdV = new_instancemethod(_snap.TBPGraph_GetRNIdV,None,TBPGraph)
TBPGraph.Empty = new_instancemethod(_snap.TBPGraph_Empty,None,TBPGraph)
TBPGraph.Clr = new_instancemethod(_snap.TBPGraph_Clr,None,TBPGraph)
TBPGraph.Reserve = new_instancemethod(_snap.TBPGraph_Reserve,None,TBPGraph)
TBPGraph.Defrag = new_instancemethod(_snap.TBPGraph_Defrag,None,TBPGraph)
TBPGraph.IsOk = new_instancemethod(_snap.TBPGraph_IsOk,None,TBPGraph)
TBPGraph.Dump = new_instancemethod(_snap.TBPGraph_Dump,None,TBPGraph)
TBPGraph_swigregister = _snap.TBPGraph_swigregister
TBPGraph_swigregister(TBPGraph)

def TBPGraph_New(*args):
  return _snap.TBPGraph_New(*args)
TBPGraph_New = _snap.TBPGraph_New

def TBPGraph_Load(*args):
  return _snap.TBPGraph_Load(*args)
TBPGraph_Load = _snap.TBPGraph_Load

def TBPGraph_GetSmallGraph():
  return _snap.TBPGraph_GetSmallGraph()
TBPGraph_GetSmallGraph = _snap.TBPGraph_GetSmallGraph


def LoadDyNet(*args):
  return _snap.LoadDyNet(*args)
LoadDyNet = _snap.LoadDyNet

def LoadDyNetGraphV(*args):
  return _snap.LoadDyNetGraphV(*args)
LoadDyNetGraphV = _snap.LoadDyNetGraphV
class TBigStrPool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TBigStrPool_swiginit(self,_snap.new_TBigStrPool(*args))
    __swig_destroy__ = _snap.delete_TBigStrPool
    New = staticmethod(_snap.TBigStrPool_New)
    Load = staticmethod(_snap.TBigStrPool_Load)
TBigStrPool.Save = new_instancemethod(_snap.TBigStrPool_Save,None,TBigStrPool)
TBigStrPool.GetStrs = new_instancemethod(_snap.TBigStrPool_GetStrs,None,TBigStrPool)
TBigStrPool.Len = new_instancemethod(_snap.TBigStrPool_Len,None,TBigStrPool)
TBigStrPool.Size = new_instancemethod(_snap.TBigStrPool_Size,None,TBigStrPool)
TBigStrPool.Empty = new_instancemethod(_snap.TBigStrPool_Empty,None,TBigStrPool)
TBigStrPool.__call__ = new_instancemethod(_snap.TBigStrPool___call__,None,TBigStrPool)
TBigStrPool.AddStr = new_instancemethod(_snap.TBigStrPool_AddStr,None,TBigStrPool)
TBigStrPool.GetCStr = new_instancemethod(_snap.TBigStrPool_GetCStr,None,TBigStrPool)
TBigStrPool.GetStrFromOffset = new_instancemethod(_snap.TBigStrPool_GetStrFromOffset,None,TBigStrPool)
TBigStrPool.GetCStrFromOffset = new_instancemethod(_snap.TBigStrPool_GetCStrFromOffset,None,TBigStrPool)
TBigStrPool.Clr = new_instancemethod(_snap.TBigStrPool_Clr,None,TBigStrPool)
TBigStrPool.Cmp = new_instancemethod(_snap.TBigStrPool_Cmp,None,TBigStrPool)
TBigStrPool.GetPrimHashCd = new_instancemethod(_snap.TBigStrPool_GetPrimHashCd,None,TBigStrPool)
TBigStrPool.GetSecHashCd = new_instancemethod(_snap.TBigStrPool_GetSecHashCd,None,TBigStrPool)
TBigStrPool_swigregister = _snap.TBigStrPool_swigregister
TBigStrPool_swigregister(TBigStrPool)

def TBigStrPool_New(*args):
  return _snap.TBigStrPool_New(*args)
TBigStrPool_New = _snap.TBigStrPool_New

def TBigStrPool_Load(*args):
  return _snap.TBigStrPool_Load(*args)
TBigStrPool_Load = _snap.TBigStrPool_Load

class TStrHashF_OldGLib(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetPrimHashCd = staticmethod(_snap.TStrHashF_OldGLib_GetPrimHashCd)
    GetSecHashCd = staticmethod(_snap.TStrHashF_OldGLib_GetSecHashCd)
    def __init__(self): 
        _snap.TStrHashF_OldGLib_swiginit(self,_snap.new_TStrHashF_OldGLib())
    __swig_destroy__ = _snap.delete_TStrHashF_OldGLib
TStrHashF_OldGLib_swigregister = _snap.TStrHashF_OldGLib_swigregister
TStrHashF_OldGLib_swigregister(TStrHashF_OldGLib)

def TStrHashF_OldGLib_GetPrimHashCd(*args):
  return _snap.TStrHashF_OldGLib_GetPrimHashCd(*args)
TStrHashF_OldGLib_GetPrimHashCd = _snap.TStrHashF_OldGLib_GetPrimHashCd

def TStrHashF_OldGLib_GetSecHashCd(*args):
  return _snap.TStrHashF_OldGLib_GetSecHashCd(*args)
TStrHashF_OldGLib_GetSecHashCd = _snap.TStrHashF_OldGLib_GetSecHashCd

class TStrHashF_Md5(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetPrimHashCd = staticmethod(_snap.TStrHashF_Md5_GetPrimHashCd)
    GetSecHashCd = staticmethod(_snap.TStrHashF_Md5_GetSecHashCd)
    def __init__(self): 
        _snap.TStrHashF_Md5_swiginit(self,_snap.new_TStrHashF_Md5())
    __swig_destroy__ = _snap.delete_TStrHashF_Md5
TStrHashF_Md5_swigregister = _snap.TStrHashF_Md5_swigregister
TStrHashF_Md5_swigregister(TStrHashF_Md5)

def TStrHashF_Md5_GetPrimHashCd(*args):
  return _snap.TStrHashF_Md5_GetPrimHashCd(*args)
TStrHashF_Md5_GetPrimHashCd = _snap.TStrHashF_Md5_GetPrimHashCd

def TStrHashF_Md5_GetSecHashCd(*args):
  return _snap.TStrHashF_Md5_GetSecHashCd(*args)
TStrHashF_Md5_GetSecHashCd = _snap.TStrHashF_Md5_GetSecHashCd

class TStrHashF_DJB(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetPrimHashCd = staticmethod(_snap.TStrHashF_DJB_GetPrimHashCd)
    GetSecHashCd = staticmethod(_snap.TStrHashF_DJB_GetSecHashCd)
    def __init__(self): 
        _snap.TStrHashF_DJB_swiginit(self,_snap.new_TStrHashF_DJB())
    __swig_destroy__ = _snap.delete_TStrHashF_DJB
TStrHashF_DJB_swigregister = _snap.TStrHashF_DJB_swigregister
TStrHashF_DJB_swigregister(TStrHashF_DJB)

def TStrHashF_DJB_GetPrimHashCd(*args):
  return _snap.TStrHashF_DJB_GetPrimHashCd(*args)
TStrHashF_DJB_GetPrimHashCd = _snap.TStrHashF_DJB_GetPrimHashCd

def TStrHashF_DJB_GetSecHashCd(*args):
  return _snap.TStrHashF_DJB_GetSecHashCd(*args)
TStrHashF_DJB_GetSecHashCd = _snap.TStrHashF_DJB_GetSecHashCd


def GenRndBipart(*args):
  return _snap.GenRndBipart(*args)
GenRndBipart = _snap.GenRndBipart

def GenRndDegK(*args):
  return _snap.GenRndDegK(*args)
GenRndDegK = _snap.GenRndDegK

def GenRndPowerLaw(*args):
  return _snap.GenRndPowerLaw(*args)
GenRndPowerLaw = _snap.GenRndPowerLaw

def GenDegSeq(*args):
  return _snap.GenDegSeq(*args)
GenDegSeq = _snap.GenDegSeq

def GenPrefAttach(*args):
  return _snap.GenPrefAttach(*args)
GenPrefAttach = _snap.GenPrefAttach

def GenGeoPrefAttach(*args):
  return _snap.GenGeoPrefAttach(*args)
GenGeoPrefAttach = _snap.GenGeoPrefAttach

def GenSmallWorld(*args):
  return _snap.GenSmallWorld(*args)
GenSmallWorld = _snap.GenSmallWorld

def GenConfModel(*args):
  return _snap.GenConfModel(*args)
GenConfModel = _snap.GenConfModel

def GenRewire(*args):
  return _snap.GenRewire(*args)
GenRewire = _snap.GenRewire

def GenForestFire(*args):
  return _snap.GenForestFire(*args)
GenForestFire = _snap.GenForestFire

def GenCopyModel(*args):
  return _snap.GenCopyModel(*args)
GenCopyModel = _snap.GenCopyModel

def GenRMat(*args):
  return _snap.GenRMat(*args)
GenRMat = _snap.GenRMat

def GenRMatEpinions():
  return _snap.GenRMatEpinions()
GenRMatEpinions = _snap.GenRMatEpinions
class TGUtil(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetCdf = staticmethod(_snap.TGUtil_GetCdf)
    GetCCdf = staticmethod(_snap.TGUtil_GetCCdf)
    GetPdf = staticmethod(_snap.TGUtil_GetPdf)
    Normalize = staticmethod(_snap.TGUtil_Normalize)
    MakeExpBins = staticmethod(_snap.TGUtil_MakeExpBins)
    def __init__(self): 
        _snap.TGUtil_swiginit(self,_snap.new_TGUtil())
    __swig_destroy__ = _snap.delete_TGUtil
TGUtil_swigregister = _snap.TGUtil_swigregister
TGUtil_swigregister(TGUtil)

def TGUtil_GetCdf(*args):
  return _snap.TGUtil_GetCdf(*args)
TGUtil_GetCdf = _snap.TGUtil_GetCdf

def TGUtil_GetCCdf(*args):
  return _snap.TGUtil_GetCCdf(*args)
TGUtil_GetCCdf = _snap.TGUtil_GetCCdf

def TGUtil_GetPdf(*args):
  return _snap.TGUtil_GetPdf(*args)
TGUtil_GetPdf = _snap.TGUtil_GetPdf

def TGUtil_Normalize(*args):
  return _snap.TGUtil_Normalize(*args)
TGUtil_Normalize = _snap.TGUtil_Normalize

def TGUtil_MakeExpBins(*args):
  return _snap.TGUtil_MakeExpBins(*args)
TGUtil_MakeExpBins = _snap.TGUtil_MakeExpBins

class TStrUtil(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetXmlTagVal = staticmethod(_snap.TStrUtil_GetXmlTagVal)
    GetXmlTagNmVal = staticmethod(_snap.TStrUtil_GetXmlTagNmVal)
    GetXmlTagNmVal2 = staticmethod(_snap.TStrUtil_GetXmlTagNmVal2)
    GetDomNm = staticmethod(_snap.TStrUtil_GetDomNm)
    GetDomNm2 = staticmethod(_snap.TStrUtil_GetDomNm2)
    GetWebsiteNm = staticmethod(_snap.TStrUtil_GetWebsiteNm)
    GetNormalizedUrl = staticmethod(_snap.TStrUtil_GetNormalizedUrl)
    StripEnd = staticmethod(_snap.TStrUtil_StripEnd)
    GetShorStr = staticmethod(_snap.TStrUtil_GetShorStr)
    GetCleanStr = staticmethod(_snap.TStrUtil_GetCleanStr)
    GetCleanWrdStr = staticmethod(_snap.TStrUtil_GetCleanWrdStr)
    CountWords = staticmethod(_snap.TStrUtil_CountWords)
    SplitWords = staticmethod(_snap.TStrUtil_SplitWords)
    SplitOnCh = staticmethod(_snap.TStrUtil_SplitOnCh)
    SplitLines = staticmethod(_snap.TStrUtil_SplitLines)
    SplitSentences = staticmethod(_snap.TStrUtil_SplitSentences)
    RemoveHtmlTags = staticmethod(_snap.TStrUtil_RemoveHtmlTags)
    IsLatinStr = staticmethod(_snap.TStrUtil_IsLatinStr)
    GetWIdV = staticmethod(_snap.TStrUtil_GetWIdV)
    GetAddWIdV = staticmethod(_snap.TStrUtil_GetAddWIdV)
    GetTmFromStr = staticmethod(_snap.TStrUtil_GetTmFromStr)
    GetStdName = staticmethod(_snap.TStrUtil_GetStdName)
    GetStdNameV = staticmethod(_snap.TStrUtil_GetStdNameV)
    def __init__(self): 
        _snap.TStrUtil_swiginit(self,_snap.new_TStrUtil())
    __swig_destroy__ = _snap.delete_TStrUtil
TStrUtil_swigregister = _snap.TStrUtil_swigregister
TStrUtil_swigregister(TStrUtil)

def TStrUtil_GetXmlTagVal(*args):
  return _snap.TStrUtil_GetXmlTagVal(*args)
TStrUtil_GetXmlTagVal = _snap.TStrUtil_GetXmlTagVal

def TStrUtil_GetXmlTagNmVal(*args):
  return _snap.TStrUtil_GetXmlTagNmVal(*args)
TStrUtil_GetXmlTagNmVal = _snap.TStrUtil_GetXmlTagNmVal

def TStrUtil_GetXmlTagNmVal2(*args):
  return _snap.TStrUtil_GetXmlTagNmVal2(*args)
TStrUtil_GetXmlTagNmVal2 = _snap.TStrUtil_GetXmlTagNmVal2

def TStrUtil_GetDomNm(*args):
  return _snap.TStrUtil_GetDomNm(*args)
TStrUtil_GetDomNm = _snap.TStrUtil_GetDomNm

def TStrUtil_GetDomNm2(*args):
  return _snap.TStrUtil_GetDomNm2(*args)
TStrUtil_GetDomNm2 = _snap.TStrUtil_GetDomNm2

def TStrUtil_GetWebsiteNm(*args):
  return _snap.TStrUtil_GetWebsiteNm(*args)
TStrUtil_GetWebsiteNm = _snap.TStrUtil_GetWebsiteNm

def TStrUtil_GetNormalizedUrl(*args):
  return _snap.TStrUtil_GetNormalizedUrl(*args)
TStrUtil_GetNormalizedUrl = _snap.TStrUtil_GetNormalizedUrl

def TStrUtil_StripEnd(*args):
  return _snap.TStrUtil_StripEnd(*args)
TStrUtil_StripEnd = _snap.TStrUtil_StripEnd

def TStrUtil_GetShorStr(*args):
  return _snap.TStrUtil_GetShorStr(*args)
TStrUtil_GetShorStr = _snap.TStrUtil_GetShorStr

def TStrUtil_GetCleanStr(*args):
  return _snap.TStrUtil_GetCleanStr(*args)
TStrUtil_GetCleanStr = _snap.TStrUtil_GetCleanStr

def TStrUtil_GetCleanWrdStr(*args):
  return _snap.TStrUtil_GetCleanWrdStr(*args)
TStrUtil_GetCleanWrdStr = _snap.TStrUtil_GetCleanWrdStr

def TStrUtil_CountWords(*args):
  return _snap.TStrUtil_CountWords(*args)
TStrUtil_CountWords = _snap.TStrUtil_CountWords

def TStrUtil_SplitWords(*args):
  return _snap.TStrUtil_SplitWords(*args)
TStrUtil_SplitWords = _snap.TStrUtil_SplitWords

def TStrUtil_SplitOnCh(*args):
  return _snap.TStrUtil_SplitOnCh(*args)
TStrUtil_SplitOnCh = _snap.TStrUtil_SplitOnCh

def TStrUtil_SplitLines(*args):
  return _snap.TStrUtil_SplitLines(*args)
TStrUtil_SplitLines = _snap.TStrUtil_SplitLines

def TStrUtil_SplitSentences(*args):
  return _snap.TStrUtil_SplitSentences(*args)
TStrUtil_SplitSentences = _snap.TStrUtil_SplitSentences

def TStrUtil_RemoveHtmlTags(*args):
  return _snap.TStrUtil_RemoveHtmlTags(*args)
TStrUtil_RemoveHtmlTags = _snap.TStrUtil_RemoveHtmlTags

def TStrUtil_IsLatinStr(*args):
  return _snap.TStrUtil_IsLatinStr(*args)
TStrUtil_IsLatinStr = _snap.TStrUtil_IsLatinStr

def TStrUtil_GetWIdV(*args):
  return _snap.TStrUtil_GetWIdV(*args)
TStrUtil_GetWIdV = _snap.TStrUtil_GetWIdV

def TStrUtil_GetAddWIdV(*args):
  return _snap.TStrUtil_GetAddWIdV(*args)
TStrUtil_GetAddWIdV = _snap.TStrUtil_GetAddWIdV

def TStrUtil_GetTmFromStr(*args):
  return _snap.TStrUtil_GetTmFromStr(*args)
TStrUtil_GetTmFromStr = _snap.TStrUtil_GetTmFromStr

def TStrUtil_GetStdName(*args):
  return _snap.TStrUtil_GetStdName(*args)
TStrUtil_GetStdName = _snap.TStrUtil_GetStdName

def TStrUtil_GetStdNameV(*args):
  return _snap.TStrUtil_GetStdNameV(*args)
TStrUtil_GetStdNameV = _snap.TStrUtil_GetStdNameV


def WriteN(*args):
  return _snap.WriteN(*args)
WriteN = _snap.WriteN

def SeedRandom():
  return _snap.SeedRandom()
SeedRandom = _snap.SeedRandom

def Randomize(*args):
  return _snap.Randomize(*args)
Randomize = _snap.Randomize

def StdDist(*args):
  return _snap.StdDist(*args)
StdDist = _snap.StdDist

def GetDegrees(*args):
  return _snap.GetDegrees(*args)
GetDegrees = _snap.GetDegrees

def IncVal(*args):
  return _snap.IncVal(*args)
IncVal = _snap.IncVal

def AssignRndTask(*args):
  return _snap.AssignRndTask(*args)
AssignRndTask = _snap.AssignRndTask

def AssignEdges(*args):
  return _snap.AssignEdges(*args)
AssignEdges = _snap.AssignEdges

def GetAdjLists(*args):
  return _snap.GetAdjLists(*args)
GetAdjLists = _snap.GetAdjLists

def GetNeighborhood(*args):
  return _snap.GetNeighborhood(*args)
GetNeighborhood = _snap.GetNeighborhood

def Edge2Hash(*args):
  return _snap.Edge2Hash(*args)
Edge2Hash = _snap.Edge2Hash

def GetNewNodes(*args):
  return _snap.GetNewNodes(*args)
GetNewNodes = _snap.GetNewNodes

def Nodes2Tasks(*args):
  return _snap.Nodes2Tasks(*args)
Nodes2Tasks = _snap.Nodes2Tasks
class TNGraphNodeI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TNGraphNodeI_swiginit(self,_snap.new_TNGraphNodeI(*args))
    __swig_destroy__ = _snap.delete_TNGraphNodeI
TNGraphNodeI.Next = new_instancemethod(_snap.TNGraphNodeI_Next,None,TNGraphNodeI)
TNGraphNodeI.__lt__ = new_instancemethod(_snap.TNGraphNodeI___lt__,None,TNGraphNodeI)
TNGraphNodeI.__eq__ = new_instancemethod(_snap.TNGraphNodeI___eq__,None,TNGraphNodeI)
TNGraphNodeI.GetId = new_instancemethod(_snap.TNGraphNodeI_GetId,None,TNGraphNodeI)
TNGraphNodeI.GetDeg = new_instancemethod(_snap.TNGraphNodeI_GetDeg,None,TNGraphNodeI)
TNGraphNodeI.GetInDeg = new_instancemethod(_snap.TNGraphNodeI_GetInDeg,None,TNGraphNodeI)
TNGraphNodeI.GetOutDeg = new_instancemethod(_snap.TNGraphNodeI_GetOutDeg,None,TNGraphNodeI)
TNGraphNodeI.GetInNId = new_instancemethod(_snap.TNGraphNodeI_GetInNId,None,TNGraphNodeI)
TNGraphNodeI.GetOutNId = new_instancemethod(_snap.TNGraphNodeI_GetOutNId,None,TNGraphNodeI)
TNGraphNodeI.GetNbrNId = new_instancemethod(_snap.TNGraphNodeI_GetNbrNId,None,TNGraphNodeI)
TNGraphNodeI.IsInNId = new_instancemethod(_snap.TNGraphNodeI_IsInNId,None,TNGraphNodeI)
TNGraphNodeI.IsOutNId = new_instancemethod(_snap.TNGraphNodeI_IsOutNId,None,TNGraphNodeI)
TNGraphNodeI.IsNbrNId = new_instancemethod(_snap.TNGraphNodeI_IsNbrNId,None,TNGraphNodeI)
TNGraphNodeI_swigregister = _snap.TNGraphNodeI_swigregister
TNGraphNodeI_swigregister(TNGraphNodeI)

class TNGraphEdgeI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TNGraphEdgeI_swiginit(self,_snap.new_TNGraphEdgeI(*args))
    __swig_destroy__ = _snap.delete_TNGraphEdgeI
TNGraphEdgeI.Next = new_instancemethod(_snap.TNGraphEdgeI_Next,None,TNGraphEdgeI)
TNGraphEdgeI.__lt__ = new_instancemethod(_snap.TNGraphEdgeI___lt__,None,TNGraphEdgeI)
TNGraphEdgeI.__eq__ = new_instancemethod(_snap.TNGraphEdgeI___eq__,None,TNGraphEdgeI)
TNGraphEdgeI.GetId = new_instancemethod(_snap.TNGraphEdgeI_GetId,None,TNGraphEdgeI)
TNGraphEdgeI.GetSrcNId = new_instancemethod(_snap.TNGraphEdgeI_GetSrcNId,None,TNGraphEdgeI)
TNGraphEdgeI.GetDstNId = new_instancemethod(_snap.TNGraphEdgeI_GetDstNId,None,TNGraphEdgeI)
TNGraphEdgeI_swigregister = _snap.TNGraphEdgeI_swigregister
TNGraphEdgeI_swigregister(TNGraphEdgeI)

class TUNGraphNodeI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TUNGraphNodeI_swiginit(self,_snap.new_TUNGraphNodeI(*args))
    __swig_destroy__ = _snap.delete_TUNGraphNodeI
TUNGraphNodeI.Next = new_instancemethod(_snap.TUNGraphNodeI_Next,None,TUNGraphNodeI)
TUNGraphNodeI.__lt__ = new_instancemethod(_snap.TUNGraphNodeI___lt__,None,TUNGraphNodeI)
TUNGraphNodeI.__eq__ = new_instancemethod(_snap.TUNGraphNodeI___eq__,None,TUNGraphNodeI)
TUNGraphNodeI.GetId = new_instancemethod(_snap.TUNGraphNodeI_GetId,None,TUNGraphNodeI)
TUNGraphNodeI.GetDeg = new_instancemethod(_snap.TUNGraphNodeI_GetDeg,None,TUNGraphNodeI)
TUNGraphNodeI.GetInDeg = new_instancemethod(_snap.TUNGraphNodeI_GetInDeg,None,TUNGraphNodeI)
TUNGraphNodeI.GetOutDeg = new_instancemethod(_snap.TUNGraphNodeI_GetOutDeg,None,TUNGraphNodeI)
TUNGraphNodeI.GetInNId = new_instancemethod(_snap.TUNGraphNodeI_GetInNId,None,TUNGraphNodeI)
TUNGraphNodeI.GetOutNId = new_instancemethod(_snap.TUNGraphNodeI_GetOutNId,None,TUNGraphNodeI)
TUNGraphNodeI.GetNbrNId = new_instancemethod(_snap.TUNGraphNodeI_GetNbrNId,None,TUNGraphNodeI)
TUNGraphNodeI.IsInNId = new_instancemethod(_snap.TUNGraphNodeI_IsInNId,None,TUNGraphNodeI)
TUNGraphNodeI.IsOutNId = new_instancemethod(_snap.TUNGraphNodeI_IsOutNId,None,TUNGraphNodeI)
TUNGraphNodeI.IsNbrNId = new_instancemethod(_snap.TUNGraphNodeI_IsNbrNId,None,TUNGraphNodeI)
TUNGraphNodeI_swigregister = _snap.TUNGraphNodeI_swigregister
TUNGraphNodeI_swigregister(TUNGraphNodeI)

class TUNGraphEdgeI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TUNGraphEdgeI_swiginit(self,_snap.new_TUNGraphEdgeI(*args))
    __swig_destroy__ = _snap.delete_TUNGraphEdgeI
TUNGraphEdgeI.Next = new_instancemethod(_snap.TUNGraphEdgeI_Next,None,TUNGraphEdgeI)
TUNGraphEdgeI.__lt__ = new_instancemethod(_snap.TUNGraphEdgeI___lt__,None,TUNGraphEdgeI)
TUNGraphEdgeI.__eq__ = new_instancemethod(_snap.TUNGraphEdgeI___eq__,None,TUNGraphEdgeI)
TUNGraphEdgeI.GetId = new_instancemethod(_snap.TUNGraphEdgeI_GetId,None,TUNGraphEdgeI)
TUNGraphEdgeI.GetSrcNId = new_instancemethod(_snap.TUNGraphEdgeI_GetSrcNId,None,TUNGraphEdgeI)
TUNGraphEdgeI.GetDstNId = new_instancemethod(_snap.TUNGraphEdgeI_GetDstNId,None,TUNGraphEdgeI)
TUNGraphEdgeI_swigregister = _snap.TUNGraphEdgeI_swigregister
TUNGraphEdgeI_swigregister(TUNGraphEdgeI)

class TIntV(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _snap.delete_TIntV
    def __init__(self, *args): 
        _snap.TIntV_swiginit(self,_snap.new_TIntV(*args))
    SwapI = staticmethod(_snap.TIntV_SwapI)
    GetV = staticmethod(_snap.TIntV_GetV)
TIntV.Load = new_instancemethod(_snap.TIntV_Load,None,TIntV)
TIntV.Save = new_instancemethod(_snap.TIntV_Save,None,TIntV)
TIntV.LoadXml = new_instancemethod(_snap.TIntV_LoadXml,None,TIntV)
TIntV.SaveXml = new_instancemethod(_snap.TIntV_SaveXml,None,TIntV)
TIntV.__add__ = new_instancemethod(_snap.TIntV___add__,None,TIntV)
TIntV.__eq__ = new_instancemethod(_snap.TIntV___eq__,None,TIntV)
TIntV.__lt__ = new_instancemethod(_snap.TIntV___lt__,None,TIntV)
TIntV.GetMemUsed = new_instancemethod(_snap.TIntV_GetMemUsed,None,TIntV)
TIntV.GetMemSize = new_instancemethod(_snap.TIntV_GetMemSize,None,TIntV)
TIntV.GetPrimHashCd = new_instancemethod(_snap.TIntV_GetPrimHashCd,None,TIntV)
TIntV.GetSecHashCd = new_instancemethod(_snap.TIntV_GetSecHashCd,None,TIntV)
TIntV.Gen = new_instancemethod(_snap.TIntV_Gen,None,TIntV)
TIntV.GenExt = new_instancemethod(_snap.TIntV_GenExt,None,TIntV)
TIntV.IsExt = new_instancemethod(_snap.TIntV_IsExt,None,TIntV)
TIntV.Reserve = new_instancemethod(_snap.TIntV_Reserve,None,TIntV)
TIntV.Clr = new_instancemethod(_snap.TIntV_Clr,None,TIntV)
TIntV.Trunc = new_instancemethod(_snap.TIntV_Trunc,None,TIntV)
TIntV.Pack = new_instancemethod(_snap.TIntV_Pack,None,TIntV)
TIntV.MoveFrom = new_instancemethod(_snap.TIntV_MoveFrom,None,TIntV)
TIntV.Empty = new_instancemethod(_snap.TIntV_Empty,None,TIntV)
TIntV.Len = new_instancemethod(_snap.TIntV_Len,None,TIntV)
TIntV.Reserved = new_instancemethod(_snap.TIntV_Reserved,None,TIntV)
TIntV.Last = new_instancemethod(_snap.TIntV_Last,None,TIntV)
TIntV.LastValN = new_instancemethod(_snap.TIntV_LastValN,None,TIntV)
TIntV.LastLast = new_instancemethod(_snap.TIntV_LastLast,None,TIntV)
TIntV.BegI = new_instancemethod(_snap.TIntV_BegI,None,TIntV)
TIntV.EndI = new_instancemethod(_snap.TIntV_EndI,None,TIntV)
TIntV.GetI = new_instancemethod(_snap.TIntV_GetI,None,TIntV)
TIntV.AddV = new_instancemethod(_snap.TIntV_AddV,None,TIntV)
TIntV.AddSorted = new_instancemethod(_snap.TIntV_AddSorted,None,TIntV)
TIntV.AddBackSorted = new_instancemethod(_snap.TIntV_AddBackSorted,None,TIntV)
TIntV.AddVMerged = new_instancemethod(_snap.TIntV_AddVMerged,None,TIntV)
TIntV.AddUnique = new_instancemethod(_snap.TIntV_AddUnique,None,TIntV)
TIntV.GetVal = new_instancemethod(_snap.TIntV_GetVal,None,TIntV)
TIntV.GetSubValV = new_instancemethod(_snap.TIntV_GetSubValV,None,TIntV)
TIntV.Ins = new_instancemethod(_snap.TIntV_Ins,None,TIntV)
TIntV.Del = new_instancemethod(_snap.TIntV_Del,None,TIntV)
TIntV.DelLast = new_instancemethod(_snap.TIntV_DelLast,None,TIntV)
TIntV.DelIfIn = new_instancemethod(_snap.TIntV_DelIfIn,None,TIntV)
TIntV.DelAll = new_instancemethod(_snap.TIntV_DelAll,None,TIntV)
TIntV.PutAll = new_instancemethod(_snap.TIntV_PutAll,None,TIntV)
TIntV.Swap = new_instancemethod(_snap.TIntV_Swap,None,TIntV)
TIntV.NextPerm = new_instancemethod(_snap.TIntV_NextPerm,None,TIntV)
TIntV.PrevPerm = new_instancemethod(_snap.TIntV_PrevPerm,None,TIntV)
TIntV.GetPivotValN = new_instancemethod(_snap.TIntV_GetPivotValN,None,TIntV)
TIntV.BSort = new_instancemethod(_snap.TIntV_BSort,None,TIntV)
TIntV.ISort = new_instancemethod(_snap.TIntV_ISort,None,TIntV)
TIntV.Partition = new_instancemethod(_snap.TIntV_Partition,None,TIntV)
TIntV.QSort = new_instancemethod(_snap.TIntV_QSort,None,TIntV)
TIntV.Sort = new_instancemethod(_snap.TIntV_Sort,None,TIntV)
TIntV.IsSorted = new_instancemethod(_snap.TIntV_IsSorted,None,TIntV)
TIntV.Shuffle = new_instancemethod(_snap.TIntV_Shuffle,None,TIntV)
TIntV.Reverse = new_instancemethod(_snap.TIntV_Reverse,None,TIntV)
TIntV.Merge = new_instancemethod(_snap.TIntV_Merge,None,TIntV)
TIntV.Intrs = new_instancemethod(_snap.TIntV_Intrs,None,TIntV)
TIntV.Union = new_instancemethod(_snap.TIntV_Union,None,TIntV)
TIntV.Diff = new_instancemethod(_snap.TIntV_Diff,None,TIntV)
TIntV.IntrsLen = new_instancemethod(_snap.TIntV_IntrsLen,None,TIntV)
TIntV.UnionLen = new_instancemethod(_snap.TIntV_UnionLen,None,TIntV)
TIntV.Count = new_instancemethod(_snap.TIntV_Count,None,TIntV)
TIntV.SearchBin = new_instancemethod(_snap.TIntV_SearchBin,None,TIntV)
TIntV.SearchForw = new_instancemethod(_snap.TIntV_SearchForw,None,TIntV)
TIntV.SearchBack = new_instancemethod(_snap.TIntV_SearchBack,None,TIntV)
TIntV.SearchVForw = new_instancemethod(_snap.TIntV_SearchVForw,None,TIntV)
TIntV.IsIn = new_instancemethod(_snap.TIntV_IsIn,None,TIntV)
TIntV.IsInBin = new_instancemethod(_snap.TIntV_IsInBin,None,TIntV)
TIntV.GetDat = new_instancemethod(_snap.TIntV_GetDat,None,TIntV)
TIntV.GetAddDat = new_instancemethod(_snap.TIntV_GetAddDat,None,TIntV)
TIntV.GetMxValN = new_instancemethod(_snap.TIntV_GetMxValN,None,TIntV)
TIntV.Add = new_instancemethod(_snap.TIntV_Add,None,TIntV)
TIntV.AddMerged = new_instancemethod(_snap.TIntV_AddMerged,None,TIntV)
TIntV_swigregister = _snap.TIntV_swigregister
TIntV_swigregister(TIntV)

def TIntV_SwapI(*args):
  return _snap.TIntV_SwapI(*args)
TIntV_SwapI = _snap.TIntV_SwapI

def TIntV_GetV(*args):
  return _snap.TIntV_GetV(*args)
TIntV_GetV = _snap.TIntV_GetV

class TIntIntVV(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _snap.delete_TIntIntVV
    def __init__(self, *args): 
        _snap.TIntIntVV_swiginit(self,_snap.new_TIntIntVV(*args))
    SwapI = staticmethod(_snap.TIntIntVV_SwapI)
    GetV = staticmethod(_snap.TIntIntVV_GetV)
TIntIntVV.Load = new_instancemethod(_snap.TIntIntVV_Load,None,TIntIntVV)
TIntIntVV.Save = new_instancemethod(_snap.TIntIntVV_Save,None,TIntIntVV)
TIntIntVV.LoadXml = new_instancemethod(_snap.TIntIntVV_LoadXml,None,TIntIntVV)
TIntIntVV.SaveXml = new_instancemethod(_snap.TIntIntVV_SaveXml,None,TIntIntVV)
TIntIntVV.__add__ = new_instancemethod(_snap.TIntIntVV___add__,None,TIntIntVV)
TIntIntVV.__eq__ = new_instancemethod(_snap.TIntIntVV___eq__,None,TIntIntVV)
TIntIntVV.__lt__ = new_instancemethod(_snap.TIntIntVV___lt__,None,TIntIntVV)
TIntIntVV.GetMemUsed = new_instancemethod(_snap.TIntIntVV_GetMemUsed,None,TIntIntVV)
TIntIntVV.GetMemSize = new_instancemethod(_snap.TIntIntVV_GetMemSize,None,TIntIntVV)
TIntIntVV.GetPrimHashCd = new_instancemethod(_snap.TIntIntVV_GetPrimHashCd,None,TIntIntVV)
TIntIntVV.GetSecHashCd = new_instancemethod(_snap.TIntIntVV_GetSecHashCd,None,TIntIntVV)
TIntIntVV.Gen = new_instancemethod(_snap.TIntIntVV_Gen,None,TIntIntVV)
TIntIntVV.GenExt = new_instancemethod(_snap.TIntIntVV_GenExt,None,TIntIntVV)
TIntIntVV.IsExt = new_instancemethod(_snap.TIntIntVV_IsExt,None,TIntIntVV)
TIntIntVV.Reserve = new_instancemethod(_snap.TIntIntVV_Reserve,None,TIntIntVV)
TIntIntVV.Clr = new_instancemethod(_snap.TIntIntVV_Clr,None,TIntIntVV)
TIntIntVV.Trunc = new_instancemethod(_snap.TIntIntVV_Trunc,None,TIntIntVV)
TIntIntVV.Pack = new_instancemethod(_snap.TIntIntVV_Pack,None,TIntIntVV)
TIntIntVV.MoveFrom = new_instancemethod(_snap.TIntIntVV_MoveFrom,None,TIntIntVV)
TIntIntVV.Empty = new_instancemethod(_snap.TIntIntVV_Empty,None,TIntIntVV)
TIntIntVV.Len = new_instancemethod(_snap.TIntIntVV_Len,None,TIntIntVV)
TIntIntVV.Reserved = new_instancemethod(_snap.TIntIntVV_Reserved,None,TIntIntVV)
TIntIntVV.Last = new_instancemethod(_snap.TIntIntVV_Last,None,TIntIntVV)
TIntIntVV.LastValN = new_instancemethod(_snap.TIntIntVV_LastValN,None,TIntIntVV)
TIntIntVV.LastLast = new_instancemethod(_snap.TIntIntVV_LastLast,None,TIntIntVV)
TIntIntVV.BegI = new_instancemethod(_snap.TIntIntVV_BegI,None,TIntIntVV)
TIntIntVV.EndI = new_instancemethod(_snap.TIntIntVV_EndI,None,TIntIntVV)
TIntIntVV.GetI = new_instancemethod(_snap.TIntIntVV_GetI,None,TIntIntVV)
TIntIntVV.AddV = new_instancemethod(_snap.TIntIntVV_AddV,None,TIntIntVV)
TIntIntVV.AddSorted = new_instancemethod(_snap.TIntIntVV_AddSorted,None,TIntIntVV)
TIntIntVV.AddBackSorted = new_instancemethod(_snap.TIntIntVV_AddBackSorted,None,TIntIntVV)
TIntIntVV.AddVMerged = new_instancemethod(_snap.TIntIntVV_AddVMerged,None,TIntIntVV)
TIntIntVV.AddUnique = new_instancemethod(_snap.TIntIntVV_AddUnique,None,TIntIntVV)
TIntIntVV.GetVal = new_instancemethod(_snap.TIntIntVV_GetVal,None,TIntIntVV)
TIntIntVV.GetSubValV = new_instancemethod(_snap.TIntIntVV_GetSubValV,None,TIntIntVV)
TIntIntVV.Ins = new_instancemethod(_snap.TIntIntVV_Ins,None,TIntIntVV)
TIntIntVV.Del = new_instancemethod(_snap.TIntIntVV_Del,None,TIntIntVV)
TIntIntVV.DelLast = new_instancemethod(_snap.TIntIntVV_DelLast,None,TIntIntVV)
TIntIntVV.DelIfIn = new_instancemethod(_snap.TIntIntVV_DelIfIn,None,TIntIntVV)
TIntIntVV.DelAll = new_instancemethod(_snap.TIntIntVV_DelAll,None,TIntIntVV)
TIntIntVV.PutAll = new_instancemethod(_snap.TIntIntVV_PutAll,None,TIntIntVV)
TIntIntVV.Swap = new_instancemethod(_snap.TIntIntVV_Swap,None,TIntIntVV)
TIntIntVV.NextPerm = new_instancemethod(_snap.TIntIntVV_NextPerm,None,TIntIntVV)
TIntIntVV.PrevPerm = new_instancemethod(_snap.TIntIntVV_PrevPerm,None,TIntIntVV)
TIntIntVV.GetPivotValN = new_instancemethod(_snap.TIntIntVV_GetPivotValN,None,TIntIntVV)
TIntIntVV.BSort = new_instancemethod(_snap.TIntIntVV_BSort,None,TIntIntVV)
TIntIntVV.ISort = new_instancemethod(_snap.TIntIntVV_ISort,None,TIntIntVV)
TIntIntVV.Partition = new_instancemethod(_snap.TIntIntVV_Partition,None,TIntIntVV)
TIntIntVV.QSort = new_instancemethod(_snap.TIntIntVV_QSort,None,TIntIntVV)
TIntIntVV.Sort = new_instancemethod(_snap.TIntIntVV_Sort,None,TIntIntVV)
TIntIntVV.IsSorted = new_instancemethod(_snap.TIntIntVV_IsSorted,None,TIntIntVV)
TIntIntVV.Shuffle = new_instancemethod(_snap.TIntIntVV_Shuffle,None,TIntIntVV)
TIntIntVV.Reverse = new_instancemethod(_snap.TIntIntVV_Reverse,None,TIntIntVV)
TIntIntVV.Merge = new_instancemethod(_snap.TIntIntVV_Merge,None,TIntIntVV)
TIntIntVV.Intrs = new_instancemethod(_snap.TIntIntVV_Intrs,None,TIntIntVV)
TIntIntVV.Union = new_instancemethod(_snap.TIntIntVV_Union,None,TIntIntVV)
TIntIntVV.Diff = new_instancemethod(_snap.TIntIntVV_Diff,None,TIntIntVV)
TIntIntVV.IntrsLen = new_instancemethod(_snap.TIntIntVV_IntrsLen,None,TIntIntVV)
TIntIntVV.UnionLen = new_instancemethod(_snap.TIntIntVV_UnionLen,None,TIntIntVV)
TIntIntVV.Count = new_instancemethod(_snap.TIntIntVV_Count,None,TIntIntVV)
TIntIntVV.SearchBin = new_instancemethod(_snap.TIntIntVV_SearchBin,None,TIntIntVV)
TIntIntVV.SearchForw = new_instancemethod(_snap.TIntIntVV_SearchForw,None,TIntIntVV)
TIntIntVV.SearchBack = new_instancemethod(_snap.TIntIntVV_SearchBack,None,TIntIntVV)
TIntIntVV.SearchVForw = new_instancemethod(_snap.TIntIntVV_SearchVForw,None,TIntIntVV)
TIntIntVV.IsIn = new_instancemethod(_snap.TIntIntVV_IsIn,None,TIntIntVV)
TIntIntVV.IsInBin = new_instancemethod(_snap.TIntIntVV_IsInBin,None,TIntIntVV)
TIntIntVV.GetDat = new_instancemethod(_snap.TIntIntVV_GetDat,None,TIntIntVV)
TIntIntVV.GetAddDat = new_instancemethod(_snap.TIntIntVV_GetAddDat,None,TIntIntVV)
TIntIntVV.GetMxValN = new_instancemethod(_snap.TIntIntVV_GetMxValN,None,TIntIntVV)
TIntIntVV_swigregister = _snap.TIntIntVV_swigregister
TIntIntVV_swigregister(TIntIntVV)

def TIntIntVV_SwapI(*args):
  return _snap.TIntIntVV_SwapI(*args)
TIntIntVV_SwapI = _snap.TIntIntVV_SwapI

def TIntIntVV_GetV(*args):
  return _snap.TIntIntVV_GetV(*args)
TIntIntVV_GetV = _snap.TIntIntVV_GetV

class TIntIntVH(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HashPrimes = _snap.TIntIntVH_HashPrimes
    def __init__(self, *args): 
        _snap.TIntIntVH_swiginit(self,_snap.new_TIntIntVH(*args))
    __swig_destroy__ = _snap.delete_TIntIntVH
TIntIntVH.Load = new_instancemethod(_snap.TIntIntVH_Load,None,TIntIntVH)
TIntIntVH.Save = new_instancemethod(_snap.TIntIntVH_Save,None,TIntIntVH)
TIntIntVH.LoadXml = new_instancemethod(_snap.TIntIntVH_LoadXml,None,TIntIntVH)
TIntIntVH.SaveXml = new_instancemethod(_snap.TIntIntVH_SaveXml,None,TIntIntVH)
TIntIntVH.__eq__ = new_instancemethod(_snap.TIntIntVH___eq__,None,TIntIntVH)
TIntIntVH.__lt__ = new_instancemethod(_snap.TIntIntVH___lt__,None,TIntIntVH)
TIntIntVH.__call__ = new_instancemethod(_snap.TIntIntVH___call__,None,TIntIntVH)
TIntIntVH.GetMemUsed = new_instancemethod(_snap.TIntIntVH_GetMemUsed,None,TIntIntVH)
TIntIntVH.BegI = new_instancemethod(_snap.TIntIntVH_BegI,None,TIntIntVH)
TIntIntVH.EndI = new_instancemethod(_snap.TIntIntVH_EndI,None,TIntIntVH)
TIntIntVH.GetI = new_instancemethod(_snap.TIntIntVH_GetI,None,TIntIntVH)
TIntIntVH.Gen = new_instancemethod(_snap.TIntIntVH_Gen,None,TIntIntVH)
TIntIntVH.Clr = new_instancemethod(_snap.TIntIntVH_Clr,None,TIntIntVH)
TIntIntVH.Empty = new_instancemethod(_snap.TIntIntVH_Empty,None,TIntIntVH)
TIntIntVH.Len = new_instancemethod(_snap.TIntIntVH_Len,None,TIntIntVH)
TIntIntVH.GetPorts = new_instancemethod(_snap.TIntIntVH_GetPorts,None,TIntIntVH)
TIntIntVH.IsAutoSize = new_instancemethod(_snap.TIntIntVH_IsAutoSize,None,TIntIntVH)
TIntIntVH.GetMxKeyIds = new_instancemethod(_snap.TIntIntVH_GetMxKeyIds,None,TIntIntVH)
TIntIntVH.GetReservedKeyIds = new_instancemethod(_snap.TIntIntVH_GetReservedKeyIds,None,TIntIntVH)
TIntIntVH.IsKeyIdEqKeyN = new_instancemethod(_snap.TIntIntVH_IsKeyIdEqKeyN,None,TIntIntVH)
TIntIntVH.DelKey = new_instancemethod(_snap.TIntIntVH_DelKey,None,TIntIntVH)
TIntIntVH.DelIfKey = new_instancemethod(_snap.TIntIntVH_DelIfKey,None,TIntIntVH)
TIntIntVH.DelKeyId = new_instancemethod(_snap.TIntIntVH_DelKeyId,None,TIntIntVH)
TIntIntVH.DelKeyIdV = new_instancemethod(_snap.TIntIntVH_DelKeyIdV,None,TIntIntVH)
TIntIntVH.MarkDelKey = new_instancemethod(_snap.TIntIntVH_MarkDelKey,None,TIntIntVH)
TIntIntVH.MarkDelKeyId = new_instancemethod(_snap.TIntIntVH_MarkDelKeyId,None,TIntIntVH)
TIntIntVH.GetKey = new_instancemethod(_snap.TIntIntVH_GetKey,None,TIntIntVH)
TIntIntVH.GetKeyId = new_instancemethod(_snap.TIntIntVH_GetKeyId,None,TIntIntVH)
TIntIntVH.GetRndKeyId = new_instancemethod(_snap.TIntIntVH_GetRndKeyId,None,TIntIntVH)
TIntIntVH.IsKeyId = new_instancemethod(_snap.TIntIntVH_IsKeyId,None,TIntIntVH)
TIntIntVH.GetKeyDat = new_instancemethod(_snap.TIntIntVH_GetKeyDat,None,TIntIntVH)
TIntIntVH.IsKeyGetDat = new_instancemethod(_snap.TIntIntVH_IsKeyGetDat,None,TIntIntVH)
TIntIntVH.FFirstKeyId = new_instancemethod(_snap.TIntIntVH_FFirstKeyId,None,TIntIntVH)
TIntIntVH.FNextKeyId = new_instancemethod(_snap.TIntIntVH_FNextKeyId,None,TIntIntVH)
TIntIntVH.GetKeyV = new_instancemethod(_snap.TIntIntVH_GetKeyV,None,TIntIntVH)
TIntIntVH.GetDatV = new_instancemethod(_snap.TIntIntVH_GetDatV,None,TIntIntVH)
TIntIntVH.GetKeyDatPrV = new_instancemethod(_snap.TIntIntVH_GetKeyDatPrV,None,TIntIntVH)
TIntIntVH.GetDatKeyPrV = new_instancemethod(_snap.TIntIntVH_GetDatKeyPrV,None,TIntIntVH)
TIntIntVH.GetKeyDatKdV = new_instancemethod(_snap.TIntIntVH_GetKeyDatKdV,None,TIntIntVH)
TIntIntVH.GetDatKeyKdV = new_instancemethod(_snap.TIntIntVH_GetDatKeyKdV,None,TIntIntVH)
TIntIntVH.Swap = new_instancemethod(_snap.TIntIntVH_Swap,None,TIntIntVH)
TIntIntVH.Defrag = new_instancemethod(_snap.TIntIntVH_Defrag,None,TIntIntVH)
TIntIntVH.Pack = new_instancemethod(_snap.TIntIntVH_Pack,None,TIntIntVH)
TIntIntVH.Sort = new_instancemethod(_snap.TIntIntVH_Sort,None,TIntIntVH)
TIntIntVH.SortByKey = new_instancemethod(_snap.TIntIntVH_SortByKey,None,TIntIntVH)
TIntIntVH.SortByDat = new_instancemethod(_snap.TIntIntVH_SortByDat,None,TIntIntVH)
TIntIntVH.AddKey = new_instancemethod(_snap.TIntIntVH_AddKey,None,TIntIntVH)
TIntIntVH.IsKey = new_instancemethod(_snap.TIntIntVH_IsKey,None,TIntIntVH)
TIntIntVH.GetDat = new_instancemethod(_snap.TIntIntVH_GetDat,None,TIntIntVH)
TIntIntVH_swigregister = _snap.TIntIntVH_swigregister
TIntIntVH_swigregister(TIntIntVH)

class TIntH(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HashPrimes = _snap.TIntH_HashPrimes
    def __init__(self, *args): 
        _snap.TIntH_swiginit(self,_snap.new_TIntH(*args))
    __swig_destroy__ = _snap.delete_TIntH
TIntH.Load = new_instancemethod(_snap.TIntH_Load,None,TIntH)
TIntH.Save = new_instancemethod(_snap.TIntH_Save,None,TIntH)
TIntH.LoadXml = new_instancemethod(_snap.TIntH_LoadXml,None,TIntH)
TIntH.SaveXml = new_instancemethod(_snap.TIntH_SaveXml,None,TIntH)
TIntH.__eq__ = new_instancemethod(_snap.TIntH___eq__,None,TIntH)
TIntH.__lt__ = new_instancemethod(_snap.TIntH___lt__,None,TIntH)
TIntH.__call__ = new_instancemethod(_snap.TIntH___call__,None,TIntH)
TIntH.GetMemUsed = new_instancemethod(_snap.TIntH_GetMemUsed,None,TIntH)
TIntH.BegI = new_instancemethod(_snap.TIntH_BegI,None,TIntH)
TIntH.EndI = new_instancemethod(_snap.TIntH_EndI,None,TIntH)
TIntH.GetI = new_instancemethod(_snap.TIntH_GetI,None,TIntH)
TIntH.Gen = new_instancemethod(_snap.TIntH_Gen,None,TIntH)
TIntH.Clr = new_instancemethod(_snap.TIntH_Clr,None,TIntH)
TIntH.Empty = new_instancemethod(_snap.TIntH_Empty,None,TIntH)
TIntH.Len = new_instancemethod(_snap.TIntH_Len,None,TIntH)
TIntH.GetPorts = new_instancemethod(_snap.TIntH_GetPorts,None,TIntH)
TIntH.IsAutoSize = new_instancemethod(_snap.TIntH_IsAutoSize,None,TIntH)
TIntH.GetMxKeyIds = new_instancemethod(_snap.TIntH_GetMxKeyIds,None,TIntH)
TIntH.GetReservedKeyIds = new_instancemethod(_snap.TIntH_GetReservedKeyIds,None,TIntH)
TIntH.IsKeyIdEqKeyN = new_instancemethod(_snap.TIntH_IsKeyIdEqKeyN,None,TIntH)
TIntH.AddDatId = new_instancemethod(_snap.TIntH_AddDatId,None,TIntH)
TIntH.DelKey = new_instancemethod(_snap.TIntH_DelKey,None,TIntH)
TIntH.DelIfKey = new_instancemethod(_snap.TIntH_DelIfKey,None,TIntH)
TIntH.DelKeyId = new_instancemethod(_snap.TIntH_DelKeyId,None,TIntH)
TIntH.DelKeyIdV = new_instancemethod(_snap.TIntH_DelKeyIdV,None,TIntH)
TIntH.MarkDelKey = new_instancemethod(_snap.TIntH_MarkDelKey,None,TIntH)
TIntH.MarkDelKeyId = new_instancemethod(_snap.TIntH_MarkDelKeyId,None,TIntH)
TIntH.GetKey = new_instancemethod(_snap.TIntH_GetKey,None,TIntH)
TIntH.GetKeyId = new_instancemethod(_snap.TIntH_GetKeyId,None,TIntH)
TIntH.GetRndKeyId = new_instancemethod(_snap.TIntH_GetRndKeyId,None,TIntH)
TIntH.IsKeyId = new_instancemethod(_snap.TIntH_IsKeyId,None,TIntH)
TIntH.GetKeyDat = new_instancemethod(_snap.TIntH_GetKeyDat,None,TIntH)
TIntH.IsKeyGetDat = new_instancemethod(_snap.TIntH_IsKeyGetDat,None,TIntH)
TIntH.FFirstKeyId = new_instancemethod(_snap.TIntH_FFirstKeyId,None,TIntH)
TIntH.FNextKeyId = new_instancemethod(_snap.TIntH_FNextKeyId,None,TIntH)
TIntH.GetKeyV = new_instancemethod(_snap.TIntH_GetKeyV,None,TIntH)
TIntH.GetDatV = new_instancemethod(_snap.TIntH_GetDatV,None,TIntH)
TIntH.GetKeyDatPrV = new_instancemethod(_snap.TIntH_GetKeyDatPrV,None,TIntH)
TIntH.GetDatKeyPrV = new_instancemethod(_snap.TIntH_GetDatKeyPrV,None,TIntH)
TIntH.GetKeyDatKdV = new_instancemethod(_snap.TIntH_GetKeyDatKdV,None,TIntH)
TIntH.GetDatKeyKdV = new_instancemethod(_snap.TIntH_GetDatKeyKdV,None,TIntH)
TIntH.Swap = new_instancemethod(_snap.TIntH_Swap,None,TIntH)
TIntH.Defrag = new_instancemethod(_snap.TIntH_Defrag,None,TIntH)
TIntH.Pack = new_instancemethod(_snap.TIntH_Pack,None,TIntH)
TIntH.Sort = new_instancemethod(_snap.TIntH_Sort,None,TIntH)
TIntH.SortByKey = new_instancemethod(_snap.TIntH_SortByKey,None,TIntH)
TIntH.SortByDat = new_instancemethod(_snap.TIntH_SortByDat,None,TIntH)
TIntH.AddKey = new_instancemethod(_snap.TIntH_AddKey,None,TIntH)
TIntH.IsKey = new_instancemethod(_snap.TIntH_IsKey,None,TIntH)
TIntH.GetDat = new_instancemethod(_snap.TIntH_GetDat,None,TIntH)
TIntH.AddDat = new_instancemethod(_snap.TIntH_AddDat,None,TIntH)
TIntH_swigregister = _snap.TIntH_swigregister
TIntH_swigregister(TIntH)

class TIntHI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _snap.TIntHI_swiginit(self,_snap.new_TIntHI(*args))
    __swig_destroy__ = _snap.delete_TIntHI
TIntHI.__eq__ = new_instancemethod(_snap.TIntHI___eq__,None,TIntHI)
TIntHI.__lt__ = new_instancemethod(_snap.TIntHI___lt__,None,TIntHI)
TIntHI.__ref__ = new_instancemethod(_snap.TIntHI___ref__,None,TIntHI)
TIntHI.__call__ = new_instancemethod(_snap.TIntHI___call__,None,TIntHI)
TIntHI.__deref__ = new_instancemethod(_snap.TIntHI___deref__,None,TIntHI)
TIntHI.Next = new_instancemethod(_snap.TIntHI_Next,None,TIntHI)
TIntHI.IsEmpty = new_instancemethod(_snap.TIntHI_IsEmpty,None,TIntHI)
TIntHI.IsEnd = new_instancemethod(_snap.TIntHI_IsEnd,None,TIntHI)
TIntHI.GetKey = new_instancemethod(_snap.TIntHI_GetKey,None,TIntHI)
TIntHI.GetDat = new_instancemethod(_snap.TIntHI_GetDat,None,TIntHI)
TIntHI_swigregister = _snap.TIntHI_swigregister
TIntHI_swigregister(TIntHI)

class PNGraph(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    New = staticmethod(_snap.PNGraph_New)
    __swig_destroy__ = _snap.delete_PNGraph
PNGraph.Save = new_instancemethod(_snap.PNGraph_Save,None,PNGraph)
PNGraph.__deref__ = new_instancemethod(_snap.PNGraph___deref__,None,PNGraph)
PNGraph.__ref__ = new_instancemethod(_snap.PNGraph___ref__,None,PNGraph)
PNGraph.__call__ = new_instancemethod(_snap.PNGraph___call__,None,PNGraph)
PNGraph.Empty = new_instancemethod(_snap.PNGraph_Empty,None,PNGraph)
PNGraph.Clr = new_instancemethod(_snap.PNGraph_Clr,None,PNGraph)
PNGraph.GetRefs = new_instancemethod(_snap.PNGraph_GetRefs,None,PNGraph)
PNGraph.Load = new_instancemethod(_snap.PNGraph_Load,None,PNGraph)
PNGraph.HasFlag = new_instancemethod(_snap.PNGraph_HasFlag,None,PNGraph)
PNGraph.GetNodes = new_instancemethod(_snap.PNGraph_GetNodes,None,PNGraph)
PNGraph.AddNode = new_instancemethod(_snap.PNGraph_AddNode,None,PNGraph)
PNGraph.DelNode = new_instancemethod(_snap.PNGraph_DelNode,None,PNGraph)
PNGraph.IsNode = new_instancemethod(_snap.PNGraph_IsNode,None,PNGraph)
PNGraph.BegNI = new_instancemethod(_snap.PNGraph_BegNI,None,PNGraph)
PNGraph.EndNI = new_instancemethod(_snap.PNGraph_EndNI,None,PNGraph)
PNGraph.GetNI = new_instancemethod(_snap.PNGraph_GetNI,None,PNGraph)
PNGraph.GetMxNId = new_instancemethod(_snap.PNGraph_GetMxNId,None,PNGraph)
PNGraph.GetEdges = new_instancemethod(_snap.PNGraph_GetEdges,None,PNGraph)
PNGraph.AddEdge = new_instancemethod(_snap.PNGraph_AddEdge,None,PNGraph)
PNGraph.DelEdge = new_instancemethod(_snap.PNGraph_DelEdge,None,PNGraph)
PNGraph.IsEdge = new_instancemethod(_snap.PNGraph_IsEdge,None,PNGraph)
PNGraph.BegEI = new_instancemethod(_snap.PNGraph_BegEI,None,PNGraph)
PNGraph.EndEI = new_instancemethod(_snap.PNGraph_EndEI,None,PNGraph)
PNGraph.GetEI = new_instancemethod(_snap.PNGraph_GetEI,None,PNGraph)
PNGraph.GetRndNId = new_instancemethod(_snap.PNGraph_GetRndNId,None,PNGraph)
PNGraph.GetRndNI = new_instancemethod(_snap.PNGraph_GetRndNI,None,PNGraph)
PNGraph.GetNIdV = new_instancemethod(_snap.PNGraph_GetNIdV,None,PNGraph)
PNGraph.Reserve = new_instancemethod(_snap.PNGraph_Reserve,None,PNGraph)
PNGraph.ReserveNIdInDeg = new_instancemethod(_snap.PNGraph_ReserveNIdInDeg,None,PNGraph)
PNGraph.ReserveNIdOutDeg = new_instancemethod(_snap.PNGraph_ReserveNIdOutDeg,None,PNGraph)
PNGraph.Defrag = new_instancemethod(_snap.PNGraph_Defrag,None,PNGraph)
PNGraph.IsOk = new_instancemethod(_snap.PNGraph_IsOk,None,PNGraph)
PNGraph.Dump = new_instancemethod(_snap.PNGraph_Dump,None,PNGraph)
PNGraph.GetSmallGraph = new_instancemethod(_snap.PNGraph_GetSmallGraph,None,PNGraph)
PNGraph_swigregister = _snap.PNGraph_swigregister
PNGraph_swigregister(PNGraph)

def PNGraph_New():
  return _snap.PNGraph_New()
PNGraph_New = _snap.PNGraph_New


def LoadEdgeList_PNGraph(*args):
  return _snap.LoadEdgeList_PNGraph(*args)
LoadEdgeList_PNGraph = _snap.LoadEdgeList_PNGraph

def GenRndGnm_PNGraph(*args):
  return _snap.GenRndGnm_PNGraph(*args)
GenRndGnm_PNGraph = _snap.GenRndGnm_PNGraph

def PrintGraphStatTable_PNGraph(*args):
  return _snap.PrintGraphStatTable_PNGraph(*args)
PrintGraphStatTable_PNGraph = _snap.PrintGraphStatTable_PNGraph


