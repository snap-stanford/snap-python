#
#	compilation parameters for SNAP Python
#

UNAME := $(shell uname)

ifeq ($(UNAME), Linux)
  # Linux flags
  SWIGFLAGS += -D_CMPWARN -D__stdcall -DSW_SNAPPY -D_OPENMP -DNONUMPY -DUSE_OPENMP -DGCC_ATOMIC
  CXXFLAGS += -fPIC -D__STDC_LIMIT_MACROS -DSW_SNAPPY -fopenmp
  LDFLAGS += -shared -fopenmp
  MANIFEST = MANIFEST.nx
  ifneq (, $(strip $(shell ldconfig -p | grep libarpack)))
    CXXFLAGS += -DF77_POST
    LIBS += -larpack
  endif
else ifeq ($(UNAME), Darwin)
  # OS X flags
  SWIGFLAGS += -D_CMPWARN -D__stdcall -DSW_SNAPPY -DNONUMPY
  CXXFLAGS += -DSW_SNAPPY
  LDFLAGS += -lpython -dynamiclib -headerpad_max_install_names
  CLANG := $(shell g++ -v 2>&1 | grep clang | cut -d " " -f 2)
  ifneq ($(CLANG), LLVM)
    SWIGFLAGS += -DGCC_ATOMIC
    CXXFLAGS += -fopenmp
    LDFLAGS += -fopenmp
    #CXXOPENMP += -fopenmp
  else
    CXXFLAGS += -DNOMP
    CXXOPENMP =
  endif
  MANIFEST = MANIFEST.mac
  ifneq (, $(strip $(shell ld -larpack 2>&1 | grep symbol)))
    CXXFLAGS += -DF77_POST
    LIBS += -larpack
  endif
else ifeq ($(shell uname -o), Cygwin)
  # Cygwin flags
  SWIGFLAGS += -D_CMPWARN -D__stdcall -DSW_SNAPPY -DNONUMPY
  CXXFLAGS += -shared -D__STDC_LIMIT_MACROS -DSW_SNAPPY
  LIBS += -lpython2.6
  MANIFEST = MANIFEST.win
endif

